@use 'sass:map';
@use '../../base' as *;
@use '../../themes/schemas' as *;

////
/// @group themes
/// @access public
/// @author <a href="https://github.com/simeonoff" target="_blank">Simeon Simeonoff</a>
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.
/// @param {Color} $color [null] - The color of the divider. (Gradients are not supported for dashed dividers).
/// @requires $light-schema
/// @example scss Change the color of the divider
///   $my-divider-theme: divider-theme($color: orange);
///   // Pass the theme to the css-vars() mixin
///   @include css-vars($my-divider-theme);
@function divider-theme(
    $schema: $light-schema,
    $color: null
) {
    $name: 'igx-divider';
    $divider-schema: ();

    @if map.has-key($schema, $name) {
        $divider-schema: map.get($schema, $name);
    } @else {
        $divider-schema: $schema;
    }

    $theme: digest-schema($divider-schema);

    @return extend($theme, (
        name: $name,
        color: $color
    ));
}

/// @param {Map} $theme - The theme used to style the component.
@mixin divider($theme) {
    @include css-vars($theme);

    %igx-divider-display {
        display: block;
        height: rem(1px);
        background: var-get($theme, 'color');
    }

    %igx-divider--dashed {
        background: linear-gradient(to right, var-get($theme, 'color') 50%, transparent 50%);
        background-size: rem(10px) rem(1px); /* dash size */
    }

    %igx-divider--vertical {
        display: inline-block;
        width: rem(1px);
        min-width: rem(1px);
        height: auto;
    }

    %igx-divider--vertical-dashed {
        background: linear-gradient(to bottom, var-get($theme, 'color') 50%, transparent 50%);
        background-size: rem(1px) rem(10px); /* dash size */
    }
}
