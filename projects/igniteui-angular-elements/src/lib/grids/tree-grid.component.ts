import { DOCUMENT, NgClass, NgFor, NgIf, NgStyle, NgTemplateOutlet } from '@angular/common';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, CUSTOM_ELEMENTS_SCHEMA, ElementRef, EnvironmentInjector, EventEmitter, Inject, Injector, IterableDiffers, LOCALE_ID, NgZone, Optional, Output, QueryList, ViewContainerRef } from '@angular/core';
import { GridServiceType, HierarchicalState, HierarchicalTransaction, HierarchicalTransactionService, IGX_GRID_BASE, IGX_GRID_SERVICE_BASE, IgxButtonDirective, IgxCircularProgressBarComponent, IgxGridForOfDirective, IgxGridHeaderRowComponent, IgxGridTransaction, IgxHierarchicalTransactionFactory, IgxIconComponent, IgxOverlayOutletDirective, IgxOverlayService, IgxRippleDirective, IgxRowEditTabStopDirective, IgxSnackbarComponent, IgxTemplateOutletDirective, IgxTextHighlightService, IgxToggleDirective, IgxTreeGridComponent } from 'igniteui-angular';
import { PlatformUtil } from 'igniteui-angular/src/lib/core/utils';
import { IgxForOfScrollSyncService, IgxForOfSyncService } from 'igniteui-angular/src/lib/directives/for-of/for_of.sync.service';
import { IgxGridCRUDService } from 'igniteui-angular/src/lib/grids/common/crud.service';
import { IgxGridRowClassesPipe, IgxGridRowPinningPipe, IgxGridRowStylesPipe, IgxHasVisibleColumnsPipe, IgxStringReplacePipe } from 'igniteui-angular/src/lib/grids/common/pipes';
import { IgxFilteringService } from 'igniteui-angular/src/lib/grids/filtering/grid-filtering.service';
import { IgxGridNavigationService } from 'igniteui-angular/src/lib/grids/grid-navigation.service';
import { IgxGridBodyDirective } from 'igniteui-angular/src/lib/grids/grid.common';
import { IgxGridValidationService } from 'igniteui-angular/src/lib/grids/grid/grid-validation.service';
import { IgxColumnMovingDropDirective } from 'igniteui-angular/src/lib/grids/moving/moving.drop.directive';
import { IgxGridColumnResizerComponent } from 'igniteui-angular/src/lib/grids/resizing/resizer.component';
import { IgxColumnResizingService } from 'igniteui-angular/src/lib/grids/resizing/resizing.service';
import { IgxGridDragSelectDirective } from 'igniteui-angular/src/lib/grids/selection/drag-select.directive';
import { IgxGridSelectionService } from 'igniteui-angular/src/lib/grids/selection/selection.service';
import { IgxSummaryDataPipe } from 'igniteui-angular/src/lib/grids/summaries/grid-root-summary.pipe';
import { IgxGridSummaryService } from 'igniteui-angular/src/lib/grids/summaries/grid-summary.service';
import { IgxSummaryRowComponent } from 'igniteui-angular/src/lib/grids/summaries/summary-row.component';
import { IgxTreeGridAPIService } from 'igniteui-angular/src/lib/grids/tree-grid/tree-grid-api.service';
import { IgxTreeGridRowComponent } from 'igniteui-angular/src/lib/grids/tree-grid/tree-grid-row.component';
import { IgxTreeGridSelectionService } from 'igniteui-angular/src/lib/grids/tree-grid/tree-grid-selection.service';
import { IgxTreeGridFilteringPipe } from 'igniteui-angular/src/lib/grids/tree-grid/tree-grid.filtering.pipe';
import { IgxTreeGridAddRowPipe, IgxTreeGridFlatteningPipe, IgxTreeGridHierarchizingPipe, IgxTreeGridNormalizeRecordsPipe, IgxTreeGridPagingPipe, IgxTreeGridSortingPipe, IgxTreeGridTransactionPipe } from 'igniteui-angular/src/lib/grids/tree-grid/tree-grid.pipes';
import { IgxTreeGridSummaryPipe } from 'igniteui-angular/src/lib/grids/tree-grid/tree-grid.summary.pipe';
import { takeUntil } from 'rxjs';
import { IColumnsAutoGeneratedEventArgs } from './events';
import { IgxActionStripToken } from 'igniteui-angular/src/lib/action-strip/token';


/* blazorAdditionalDependency: Column */
/* blazorAdditionalDependency: ColumnGroup */
/* blazorAdditionalDependency: ColumnLayout */
/* blazorAdditionalDependency: GridToolbar */
/* blazorAdditionalDependency: GridToolbarActions */
/* blazorAdditionalDependency: GridToolbarTitle */
/* blazorAdditionalDependency: GridToolbarAdvancedFiltering */
/* blazorAdditionalDependency: GridToolbarExporter */
/* blazorAdditionalDependency: GridToolbarHiding */
/* blazorAdditionalDependency: GridToolbarPinning */
/* blazorAdditionalDependency: ActionStrip */
/* blazorAdditionalDependency: GridActionsBaseDirective */
/* blazorAdditionalDependency: GridEditingActions */
/* blazorAdditionalDependency: GridPinningActions */
/* blazorIndirectRender */
/**
 * **Ignite UI for Angular Tree Grid** -
 * [Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/grid/grid)
 *
 * The Ignite UI Tree Grid displays and manipulates hierarchical data with consistent schema formatted as a table and
 * provides features such as sorting, filtering, editing, column pinning, paging, column moving and hiding.
 *
 * Example:
 * ```html
 * <igx-tree-grid [data]="employeeData" primaryKey="employeeID" foreignKey="PID" [autoGenerate]="false">
 *   <igx-column field="first" header="First Name"></igx-column>
 *   <igx-column field="last" header="Last Name"></igx-column>
 *   <igx-column field="role" header="Role"></igx-column>
 * </igx-tree-grid>
 * ```
 */
@Component({
    changeDetection: ChangeDetectionStrategy.OnPush,
    selector: 'igx-tree-grid',
    templateUrl: '../../../../igniteui-angular/src/lib/grids/tree-grid/tree-grid.component.html',
    providers: [
        IgxGridCRUDService,
        IgxGridValidationService,
        IgxGridSummaryService,
        IgxGridNavigationService,
        { provide: IgxGridSelectionService, useClass: IgxTreeGridSelectionService },
        { provide: IGX_GRID_SERVICE_BASE, useClass: IgxTreeGridAPIService },
        { provide: IGX_GRID_BASE, useExisting: IgxTreeGridElementsComponent },
        IgxFilteringService,
        IgxColumnResizingService,
        IgxForOfSyncService,
        IgxForOfScrollSyncService
    ],
    imports: [
        NgIf,
        NgFor,
        NgClass,
        NgStyle,
        NgTemplateOutlet,
        IgxGridHeaderRowComponent,
        IgxGridBodyDirective,
        IgxGridDragSelectDirective,
        IgxColumnMovingDropDirective,
        IgxGridForOfDirective,
        IgxTemplateOutletDirective,
        IgxTreeGridRowComponent,
        IgxSummaryRowComponent,
        IgxOverlayOutletDirective,
        IgxToggleDirective,
        IgxCircularProgressBarComponent,
        IgxSnackbarComponent,
        IgxButtonDirective,
        IgxRippleDirective,
        IgxRowEditTabStopDirective,
        IgxIconComponent,
        IgxGridColumnResizerComponent,
        IgxHasVisibleColumnsPipe,
        IgxGridRowPinningPipe,
        IgxGridRowClassesPipe,
        IgxGridRowStylesPipe,
        IgxSummaryDataPipe,
        IgxTreeGridHierarchizingPipe,
        IgxTreeGridFlatteningPipe,
        IgxTreeGridSortingPipe,
        IgxTreeGridFilteringPipe,
        IgxTreeGridPagingPipe,
        IgxTreeGridTransactionPipe,
        IgxTreeGridSummaryPipe,
        IgxTreeGridNormalizeRecordsPipe,
        IgxTreeGridAddRowPipe,
        IgxStringReplacePipe
    ],
    schemas: [CUSTOM_ELEMENTS_SCHEMA]
})
export class IgxTreeGridElementsComponent extends IgxTreeGridComponent {
    constructor(
        validationService: IgxGridValidationService,
        selectionService: IgxGridSelectionService,
        colResizingService: IgxColumnResizingService,
        @Inject(IGX_GRID_SERVICE_BASE) gridAPI: GridServiceType,
        // public gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>,
        transactionFactory: IgxHierarchicalTransactionFactory,
        _elementRef: ElementRef<HTMLElement>,
        _zone: NgZone,
        @Inject(DOCUMENT) document: any,
        cdr: ChangeDetectorRef,
        differs: IterableDiffers,
        viewRef: ViewContainerRef,
        injector: Injector,
        envInjector: EnvironmentInjector,
        navigation: IgxGridNavigationService,
        filteringService: IgxFilteringService,
        textHighlightService: IgxTextHighlightService,
        @Inject(IgxOverlayService) overlayService: IgxOverlayService,
        summaryService: IgxGridSummaryService,
        @Inject(LOCALE_ID) localeId: string,
        platform: PlatformUtil,
        @Optional() @Inject(IgxGridTransaction) protected override _diTransactions?:
            HierarchicalTransactionService<HierarchicalTransaction, HierarchicalState>,
    ) {
        super(
            validationService,
            selectionService,
            colResizingService,
            gridAPI,
            transactionFactory,
            _elementRef,
            _zone,
            document,
            cdr,
            differs,
            viewRef,
            injector,
            envInjector,
            navigation,
            filteringService,
            textHighlightService,
            overlayService,
            summaryService,
            localeId,
            platform,
            _diTransactions,
        );
        this.selectionService.selectedRowsChange.pipe(takeUntil(this.destroy$)).subscribe((args: any[]) => {
            this.selectedRowsChange.emit(args);
        });
    }

    @Output()
    public columnsAutogenerated = new EventEmitter<IColumnsAutoGeneratedEventArgs>();

    @Output()
    public selectedRowsChange = new EventEmitter<any[]>();

    /* contentChildren */
    /* blazorTreatAsCollection */
    /* blazorCollectionName: ActionStripCollection */
    /* blazorCollectionItemName: ActionStrip */
    /* ngQueryListName: actionStripComponents */
    @ContentChildren(IgxActionStripToken)
    public actionStripComponents: QueryList<IgxActionStripToken>;

    protected override autogenerateColumns() {
        super.autogenerateColumns();
        this.columnsAutogenerated.emit({ columns: this._autoGeneratedCols });
    }
}
