@use '../../base' as *;
@use '../../themes/schemas' as *;
@use 'sass:map';

////
/// @group themes
/// @access public
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
/// @author <a href="https://github.com/simeonoff" target="_blank">Simeon Simeonoff</a>
////

/// Grid Paging Theme
/// @param {Map} $palette [null] - The palette used as basis for styling the component.
/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.
/// @param {Color} $text-color [currentColor] - The text color.
/// @param {Color} $background-color [rgba(0, 0, 0, .04)] - The background color of the paging panel.
/// @param {Color} $border-color [rgba(0, 0, 0, .26)] - The border color of the paging panel.
///
/// @requires $default-palette
/// @requires $light-schema
/// @requires apply-palette
/// @requires extend
///
/// @example scss Change the stripes color
///   $my-paginator-theme: paginator-theme(
///     $stripes-color: orange
///   );
///   // Pass the theme to the paginator component mixin
///   @include paginator($my-paginator-theme);
@function paginator-theme(
    $palette: null,
    $schema: $light-schema,

    $text-color: null,
    $background-color: null,
    $border-color: null
) {
    $name: 'igx-paginator';
    $grid-paginator-schema: ();

    @if map.has-key($schema, $name) {
        $grid-paginator-schema: map.get($schema, $name);
    } @else {
        $grid-paginator-schema: $schema;
    }

    $theme: apply-palette($grid-paginator-schema, $palette);


    @if not($text-color) and $background-color {
        $text-color: text-contrast($background-color);
    }

    @return extend($theme, (
        name: $name,
        palette: $palette,
        text-color: $text-color,
        background-color: $background-color,
        border-color: $border-color
    ));
}

/// @param {Map} $theme - The theme used to style the component.
/// @requires {mixin} css-vars
/// @requires rem
/// @requires var-get
@mixin paginator($theme) {
    @include css-vars($theme);

    $paginator-padding: (
        comfortable: 0 rem(24px),
        cosy: 0 rem(16px),
        compact: 0 rem(12px)
    );

    $paginator-height: (
        comfortable: rem(56px),
        cosy: rem(48px),
        compact: rem(44px)
    );

    %igx-paginator {
        display: flex;
        justify-content: space-between;
        align-items: center;
        color: var-get($theme, 'text-color');
        background: var-get($theme, 'background-color');
        grid-row: 7;
        font-size: 12px;
        border-top: 1px solid var-get($theme, 'border-color');
        z-index: 1;
        padding: map.get($paginator-padding, 'comfortable');
        height: map.get($paginator-height, 'comfortable');
        width: 100%;

        &:empty {
            padding: 0;
        }
    }

    %igx-paginator--cosy {
        padding: map.get($paginator-padding, 'cosy');
        height: map.get($paginator-height, 'cosy');
    }

    %igx-paginator--compact {
        padding: map.get($paginator-padding, 'compact');
        height: map.get($paginator-height, 'compact');
    }

    %igx-paginator-content {
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 100%;
    }

    %igx-page-size {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        flex: 1;
    }

    %igx-page-size__label {
        margin-inline-end: rem(8px);
        @include ellipsis();
    }

    %igx-page-size__select {
        display: flex;
        max-width: 90px;
        min-width: 80px;
    }

    %igx-page-nav {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        flex: 1;

        > * {
            margin-inline-start: rem(8px);
        }

        [dir='rtl'] & {
            igx-icon {
                transform: scaleX(-1);
            }
        }
    }

    %igx-page-nav__text {
        display: flex;
    }
}
