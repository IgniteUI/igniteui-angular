@use '../../base' as *;
@use '../../themes/schemas' as *;
@use '../../typography/base' as *;
@use 'sass:map';

////
/// @group themes
/// @access private
/// @author <a href="https://github.com/didimmova" target="_blank">Dilyana Dimova</a>
////

/// @param {Map} $palette [null] - The palette used as basis for styling the component.
/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.
/// @param {String} $plot-area-background [null]- Gets or sets the brush used as the background for the current Map object's plot area.
/// @requires $light-schema
/// @requires apply-palette
/// @requires extend
///
/// @example scss
///   $my-map-theme: geo-map-theme($width: 550px);
///   // Pass the theme to the css-vars mixin
///   @include css-vars($my-map-theme);
@function geo-map-theme(
    $palette: null,
    $schema: $light-schema,
    $plot-area-background: null
) {
    $name: 'geo-map';
    $selector: 'igx-geographic-map';
    $chart-schema: ();

    @if map.has-key($schema, $name) {
        $chart-schema: map.get($schema, $name);
    } @else {
        $chart-schema: $schema;
    }

    $theme: apply-palette($chart-schema, $palette);

    @return extend( $theme, (
        name: $name,
        selector: $selector,
        plot-area-background: $plot-area-background,
    ));
}
