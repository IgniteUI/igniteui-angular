////
/// @group themes
/// @author <a href="https://github.com/simeonoff" target="_blank">Simeon Simeonoff</a>
////

@use 'sass:list';
@use 'sass:string';
@use '../base' as *;
@use 'schemas' as *;
@use 'palettes' as *;
@use '../components' as *;

@forward 'palettes';
@forward 'utilities';
@forward 'schemas';
@forward 'core';
@forward '../components';

/// Generates an Ignite UI for Angular global theme.
/// @param {Map} $palette - An palette to be used by the global theme.
/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the components.
/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.
/// @param {Number} $roundness [null] - Sets the global roundness factor (the value can be any decimal fraction between 0 and 1) for all components.
/// @param {Boolean} $elevation [true] - Turns on/off elevations for all components in the theme.
/// @param {Map} $elevations [$elevations] - The elevation map to be used by all component themes.
/// @param {Boolean} $wc [false] - Enable theming support for Ignite UI for Web Components
/// @requires $components
/// @requires $theme-palette
/// @requires $elevations
/// @requires {function} is-component
@mixin theme(
    $palette,
    $schema: $light-material-schema,
    $exclude: (),
    $roundness: 1,
    $elevation: true,
    $elevations: $elevations,
    $wc: false
) {
    // Stores all excluded component styles
    $excluded: ();
    $scope: if(is-root(), ':root', '&');

    @include palette-vars($palette, $contrast: true);
    @include elevation-vars($elevations);

    @if $wc {
        @include palette-to-wc($palette);
        @include elevations-to-wc($elevations);
    }

    @if $elevation == false {
        #{$scope} {
            --igx-elevation-factor: 0;

            @if $wc {
                --igc-elevation-factor: var(--igx-elevation-factor);
            }
        }
    }

    @if $roundness {
        #{$scope} {
            --igx-radius-factor: #{$roundness};

            @if $wc {
                --igc-radius-factor: var(--igx-radius-factor);
            }
        }
    }

    $theme-palette: $palette !global;

    @if list.length($exclude) > 0 {
        $excluded: is-component($exclude);
    }

    @if is-used('igx-ripple', $exclude) {
        @include ripple(ripple-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-avatar', $exclude) {
        @include avatar(avatar-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-action-strip', $exclude) {
        @include action-strip(action-strip-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-badge', $exclude) {
        @include badge(badge-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-bottom-nav', $exclude) {
        @include bottom-nav(bottom-nav-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-button', $exclude) {
        @include button(button-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-button-group', $exclude) {
        @include button-group(button-group-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-banner', $exclude) {
        @include banner(banner-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-calendar', $exclude) {
        @include calendar(calendar-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-card', $exclude) {
        @include card(card-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-carousel', $exclude) {
        @include carousel(carousel-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-splitter', $exclude) {
        @include splitter(splitter-theme(
            $schema: $schema
        ));
    }

    @if is-used('data-chart', $exclude) {
        @include css-vars(data-chart-theme(
            $schema: $schema,
        ));
    }

    @if is-used('doughnut-chart', $exclude) {
        @include css-vars(doughnut-chart-theme(
            $schema: $schema,
        ));
    }

    @if is-used('linear-gauge', $exclude) {
        @include css-vars(linear-gauge-theme(
            $schema: $schema,
        ));
    }

    @if is-used('radial-gauge', $exclude) {
        @include css-vars(radial-gauge-theme(
            $schema: $schema,
        ));
    }

    @if is-used('financial-chart', $exclude) {
        @include css-vars(financial-chart-theme(
            $schema: $schema,
        ));
    }

    @if is-used('bullet-graph', $exclude) {
        @include css-vars(bullet-graph-theme(
            $schema: $schema,
        ));
    }

    @if is-used('category-chart', $exclude) {
        @include css-vars(category-chart-theme(
            $schema: $schema,
        ));
    }

    @if is-used('geo-map', $exclude) {
        @include css-vars(geo-map-theme(
            $schema: $schema,
        ));
    }

    @if is-used('pie-chart', $exclude) {
        @include css-vars(pie-chart-theme(
            $schema: $schema,
        ));
    }

    @if is-used('sparkline', $exclude) {
        @include css-vars(sparkline-theme(
            $schema: $schema,
        ));
    }

    @if is-used('funnel-chart', $exclude) {
        @include css-vars(funnel-chart-theme(
            $schema: $schema,
        ));
    }

    @if is-used('shape-chart', $exclude) {
        @include css-vars(shape-chart-theme(
            $schema: $schema,
        ));
    }

    @if is-used('igx-checkbox', $exclude) {
        @include checkbox(checkbox-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-chip', $exclude) {
        @include chip(chip-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-column-actions', $exclude) {
        @include column-actions(column-actions-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-combo', $exclude) {
        @include combo(combo-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-date-picker', $exclude) {
        @include date-picker(calendar-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-date-range-picker', $exclude) {
        @include date-range-picker(date-range-picker-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-dialog', $exclude) {
        @include dialog(dialog-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-divider', $exclude) {
        @include divider(divider-theme(
            $schema: $schema
        ));
    }

    @if is-used('igc-dockmanager', $exclude) {
        @include dock-manager(dock-manager-theme(
            $schema: $schema
        ));
    }

    @if is-used('igc-rating', $exclude) {
        @include rating(rating-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-drop-down', $exclude) {
        @include drop-down(drop-down-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-expansion-panel', $exclude) {
        @include expansion-panel(expansion-panel-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-grid', $exclude) {
        @include grid(grid-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-grid-summary', $exclude) {
        @include grid-summary(grid-summary-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-grid-toolbar', $exclude) {
        @include grid-toolbar(grid-toolbar-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-pivot-data-selector', $exclude) {
        @include pivot-data-selector(pivot-data-selector-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-highlight', $exclude) {
        @include highlight(highlight-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-icon', $exclude) {
        @include icon(icon-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-input-group', $exclude) {
        @include input-group(input-group-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-list', $exclude) {
        @include list(list-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-navbar', $exclude) {
        @include navbar(navbar-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-nav-drawer', $exclude) {
        @include navdrawer(navdrawer-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-overlay', $exclude) {
        @include overlay(overlay-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-paginator', $exclude) {
        @include paginator(paginator-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-circular-bar', $exclude) {
        @include progress-circular(progress-circular-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-linear-bar', $exclude) {
        @include progress-linear(progress-linear-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-radio', $exclude) {
        @include radio(radio-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-scrollbar', $exclude) {
        @include scrollbar(scrollbar-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-slider', $exclude) {
        @include slider(slider-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-snackbar', $exclude) {
        @include snackbar(snackbar-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-switch', $exclude) {
        @include switch(switch-theme(
            $schema: $schema,
        ));
    }

    @if is-used('igx-tabs', $exclude) {
        @include tabs(tabs-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-stepper', $exclude) {
        @include stepper(stepper-theme(
            $schema: $schema,
        ));
    }

    @if is-used('igx-toast', $exclude) {
        @include toast(toast-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-tooltip', $exclude) {
        @include tooltip(tooltip-theme(
            $schema: $schema
        ));
    }

    @if is-used('igx-time-picker', $exclude) {
        @include time-picker(time-picker-theme(
            $schema: $schema,
        ));
    }

    @if is-used('igx-tree', $exclude) {
        @include tree(tree-theme(
            $schema: $schema,
        ));
    }

    @if is-used('igx-watermark', $exclude) {
        @include watermark(watermark-theme(
            $schema: $schema
        ));
    }

    @if list.length($dropped-themes) > 0 {
        @warn string.unquote('You have excluded the following components from the theme: "#{$dropped-themes}".');
    }
}

/// Creates a global material theme that can be used with light backgrounds.
/// @param {Map} $palette - An palette to be used by the global theme.
/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.
/// @param {Boolean} $wc [false] - Enable theming support for Ignite UI for Web Components
@mixin light-theme(
    $palette,
    $exclude: (),
    $roundness: 1,
    $elevation: true,
    $wc: false,
) {
    $grays: color($palette, 'grays');
    $surface: color($palette, 'surface');

    $light-palette: palette(
        $primary: color($palette, 'primary'),
        $secondary: color($palette, 'secondary'),
        $info: color($palette, 'info'),
        $success: color($palette, 'success'),
        $warn: color($palette, 'warn'),
        $error: color($palette, 'error'),
        $surface: if($surface != #fff, $surface, #fff),
        $grays: if($grays != #9e9e9e, $grays, #000),
    );

    @include theme(
        $palette: $light-palette,
        $schema: $light-schema,
        $exclude: $exclude,
        $roundness: $roundness,
        $elevation: $elevation,
    );
}

/// Creates a global material theme that can be used with dark backgrounds.
/// @param {Map} $palette - An palette to be used by the global theme.
/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.
/// @param {Boolean} $wc [false] - Enable theming support for Ignite UI for Web Components
@mixin dark-theme(
    $palette,
    $exclude: (),
    $roundness: 1,
    $elevation: true,
    $wc: false,
) {
    $grays: color($palette, 'grays');
    $surface: color($palette, 'surface');

    $dark-palette: palette(
        $primary: color($palette, 'primary'),
        $secondary: color($palette, 'secondary'),
        $info: color($palette, 'info'),
        $success: color($palette, 'success'),
        $warn: color($palette, 'warn'),
        $error: color($palette, 'error'),
        $surface: if($surface != #fff, $surface, #222),
        $grays: if($grays != #9e9e9e, $grays, #fff),
    );

    @include theme(
        $palette: $dark-palette,
        $schema: $dark-schema,
        $exclude: $exclude,
        $roundness: $roundness,
        $elevation: $elevation,
    );
}

/// Creates a global fluent theme that can be used with light backgrounds.
/// @param {Map} $palette - An palette to be used by the global theme.
/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.
/// @param {Boolean} $wc [false] - Enable theming support for Ignite UI for Web Components
@mixin fluent-light-theme(
    $palette,
    $exclude: (),
    $roundness: 1,
    $elevation: true,
    $wc: false,
) {
    $primary: color($palette, 'primary');
    $secondary: color($palette, 'secondary');
    $surface: color($palette, 'surface');

    @include theme(
        $palette: palette(
            $primary,
            $secondary,
            $surface: if($surface != #fff, $surface, #fff),
            $grays: #000
        ),
        $schema: $light-fluent-schema,
        $exclude: $exclude,
        $roundness: $roundness,
        $elevation: $elevation,
    );
}

/// Creates a global fluent theme that can be used with dark backgrounds.
/// @param {Map} $palette - An palette to be used by the global theme.
/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.
/// @param {Boolean} $wc [false] - Enable theming support for Ignite UI for Web Components
@mixin fluent-dark-theme(
    $palette,
    $exclude: (),
    $roundness: 1,
    $elevation: true,
    $wc: false,
) {
    $primary: color($palette, 'primary');
    $secondary: color($palette, 'secondary');
    $surface: color($palette, 'surface');

    @include theme(
        $palette: palette(
            $primary,
            $secondary,
            $surface: if($surface != #fff, $surface, #222),
            $grays: #fff
        ),
        $schema: $dark-fluent-schema,
        $exclude: $exclude,
        $roundness: $roundness,
        $elevation: $elevation,
    );
}


/// Creates a global bootstrap-like theme that can be used with light backgrounds.
/// @param {Map} $palette - An palette to be used by the global theme.
/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.
/// @param {Boolean} $wc [false] - Enable theming support for Ignite UI for Web Components
@mixin bootstrap-light-theme(
    $palette,
    $exclude: (),
    $roundness: 1,
    $elevation: true,
    $wc: false,
) {
    $primary: color($palette, 'primary');
    $secondary: color($palette, 'secondary');
    $surface: color($palette, 'surface');

    @include theme(
        $palette: palette(
            $primary,
            $secondary,
            $surface: if($surface != #f8f9fa, $surface, #f8f9fa),
            $grays: #212529
        ),
        $schema: $light-bootstrap-schema,
        $exclude: $exclude,
        $roundness: $roundness,
        $elevation: $elevation,
    );
}

/// Creates a global bootstrap-like theme that can be used with dark backgrounds.
/// @param {Map} $palette - An palette to be used by the global theme.
/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.
/// @param {Boolean} $wc [false] - Enable theming support for Ignite UI for Web Components
@mixin bootstrap-dark-theme(
    $palette,
    $exclude: (),
    $roundness: 1,
    $elevation: true,
    $wc: false,
) {
    $primary: color($palette, 'primary');
    $secondary: color($palette, 'secondary');
    $surface: color($palette, 'surface');

    @include theme(
        $palette: palette(
            $primary,
            $secondary,
            $surface: if($surface != white, $surface, #222),
            $grays: #fff
        ),
        $schema: $dark-bootstrap-schema,
        $exclude: $exclude,
        $roundness: $roundness,
        $elevation: $elevation,
    );
}

/// Creates a global indigo theme that can be used with light backgrounds.
/// @param {Map} $palette - An palette to be used by the global theme.
/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.
/// @param {Boolean} $wc [false] - Enable theming support for Ignite UI for Web Components
@mixin indigo-light-theme(
    $palette,
    $exclude: (),
    $roundness: 1,
    $elevation: true,
    $wc: false,
) {
    $primary: color($palette, 'primary');
    $secondary: color($palette, 'secondary');
    $surface: color($palette, 'surface');

    @include theme(
        $palette: palette(
            $primary,
            $secondary,
            $surface: if($surface != #fff, $surface, #fff),
            $grays: #060716,
        ),
        $schema: $light-indigo-schema,
        $exclude: $exclude,
        $roundness: $roundness,
        $elevation: $elevation,
    );
}

/// Creates a global indigo theme that can be used with dark backgrounds.
/// @param {Map} $palette - An palette to be used by the global theme.
/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.
/// @param {Boolean} $wc [false] - Enable theming support for Ignite UI for Web Components
@mixin indigo-dark-theme(
    $palette,
    $exclude: (),
    $roundness: 1,
    $elevation: true,
    $wc: false,
) {
    $primary: color($palette, 'primary');
    $secondary: color($palette, 'secondary');
    $surface: color($palette, 'surface');

    @include theme(
        $palette: palette(
            $primary,
            $secondary,
            $surface: if($surface != white, $surface, #2a2b2f),
            $grays: #fff
        ),
        $schema: $dark-indigo-schema,
        $exclude: $exclude,
        $roundness: $roundness,
        $elevation: $elevation,
    );
}
