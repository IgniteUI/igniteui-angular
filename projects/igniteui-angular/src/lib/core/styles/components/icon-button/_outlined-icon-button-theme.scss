@use 'sass:map';
@use '../../base' as *;
@use '../../themes/schemas' as *;

@function outlined-icon-button-theme(
    $schema: $light-material-schema,

    $background: null,
    $foreground: null,
    $shadow-color: null,

    $hover-background: null,
    $hover-foreground: null,

    $focus-background: null,
    $focus-foreground: null,

    $focus-hover-background: null,
    $focus-hover-foreground: null,

    $active-background: null,
    $active-foreground: null,

    $border-radius: null,
    $border-color: null,
    $focus-border-color: null,

    $disabled-background: null,
    $disabled-foreground: null,
    $disabled-border-color: null,

    $size: null,
) {
    $name: 'igx-outlined-icon-button';
    $icon-button-schema: ();

    @if map.has-key($schema, 'icon-button') {
        $icon-button-schema: map.get($schema, 'icon-button');
        @if map.has-key($icon-button-schema, 'outlined') {
            $icon-button-schema: map.get($icon-button-schema, 'outlined');
        } @else {
            $icon-button-schema: $schema;
        }
    }

    $theme: digest-schema($icon-button-schema);
    $variant: map.get($schema, '_meta', 'theme');

    @if $variant == 'material' or $variant == 'fluent' {
        @if not($hover-foreground) and $foreground {
            $hover-foreground: var(--foreground);
        }

        @if not($focus-foreground) and $foreground {
            $focus-foreground: var(--foreground);
        }

        @if not($focus-hover-foreground) and $foreground {
            $focus-hover-foreground: var(--foreground);
        }

        @if not($active-foreground) and $foreground {
            $active-foreground: var(--foreground);
        }

        @if not($hover-background) and $foreground {
            $hover-background: hsla(from var(--foreground) h s l / 0.08);
        }

        @if not($active-background) and $foreground {
            $active-background: hsla(from var(--foreground) h s l / 0.24);
        }

        @if $variant == 'material' {
            @if not($focus-background) and $foreground {
                $focus-background: hsla(from var(--foreground) h s l / 0.16);
            }

            @if not($focus-hover-background) and $foreground {
                $focus-hover-background: hsla(from var(--foreground) h s l / 0.24);
            }

            @if not($border-color) and $foreground {
                $border-color: hsla(from var(--foreground) h s l / 0.4);
            }
        } @else {
            @if not($focus-hover-background) and $hover-background {
                $focus-hover-background: var(--hover-background);
            }

            @if not($focus-border-color) and $foreground {
                $focus-border-color: var(--foreground);
            }

            @if not($border-color) and $foreground {
                $border-color: hsla(from var(--foreground) h s l / 0.7);
            }

            @if not($disabled-background) and $foreground {
                $disabled-background: hsla(from var(--foreground) h s l / 0.1);
            }
        }
    }

    @if $variant == 'indigo' {
        @if not($border-color) and $foreground {
            $border-color: hsla(from var(--foreground) h s l / 0.8);
        }

        @if not($hover-foreground) and $foreground {
            $hover-foreground: hsl(from var(--foreground) h s calc(l * 0.9));
        }

        @if not($hover-background) and $foreground {
            $hover-background: hsla(from var(--foreground) h s l / 0.1);
        }

        @if not($focus-foreground) and $foreground {
            $focus-foreground: var(--foreground);
        }

        @if not($focus-border-color) and $foreground {
            $focus-border-color: hsla(from var(--foreground) h s l / 0.2);
        }

        @if not($focus-hover-foreground) and $hover-foreground {
            $focus-hover-foreground: var(--hover-foreground);
        }

        @if not($active-foreground) and $hover-foreground {
            $active-foreground: var(--hover-foreground);
        }
    }

    @if $variant == 'bootstrap' {
        @if not($border-color) and $foreground {
            $border-color: var(--foreground);
        }

        @if not($hover-background) and $foreground {
            $hover-background: var(--foreground);
        }

        @if not($hover-foreground) and $hover-background {
            $hover-foreground: adaptive-contrast(var(--hover-background));
        }

        @if not($focus-background) and $foreground {
            $focus-background: var(--foreground);
        }

        @if not($focus-foreground) and $focus-background {
            $focus-foreground: adaptive-contrast(var(--focus-background));
        }

        @if not($active-background) and $foreground {
            $active-background: hsl(from var(--foreground) h s calc(l * 0.8));
        }

        @if not($active-foreground) and $active-background {
            $active-foreground: adaptive-contrast(var(--active-background));
        }

        @if not($focus-border-color) and $active-background {
            $focus-border-color: var(--active-background);
        }

        @if not($shadow-color) and $focus-background {
            $shadow-color: hsla(from var(--focus-background) h s l / 0.5);
        }
    }

    @if not($disabled-foreground) and $foreground {
        $disabled-foreground: hsla(from var(--foreground) h s l / 0.5);
    }

    @if not($disabled-border-color) and $border-color {
        $disabled-border-color: hsla(from var(--border-color) h s l / 0.2);
    }

    @return extend(
    $theme,
    (
        name: $name,
        background: $background,
        foreground: $foreground,
        shadow-color: $shadow-color,

        hover-background: $hover-background,
        hover-foreground: $hover-foreground,

        focus-background: $focus-background,
        focus-foreground: $focus-foreground,

        focus-hover-background: $focus-hover-background,
        focus-hover-foreground: $focus-hover-foreground,

        active-background: $active-background,
        active-foreground: $active-foreground,

        border-radius: $border-radius,
        border-color: $border-color,
        focus-border-color: $focus-border-color,

        disabled-background: $disabled-background,
        disabled-foreground: $disabled-foreground,
        disabled-border-color: $disabled-border-color,
        size: $size,
    ));
}
