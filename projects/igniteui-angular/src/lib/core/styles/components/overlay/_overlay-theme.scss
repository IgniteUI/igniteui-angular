@use 'sass:map';
@use '../../base' as *;
@use '../../themes/schemas' as *;
@use 'igniteui-theming/sass/animations/easings' as *;

////
/// @group themes
/// @access public
/// @author <a href="https://github.com/simeonoff" target="_blank">Simeon Simeonoff</a>
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.
/// @param {Color} $background-color [null] - The background color used for modal overlays.
/// @requires $light-material-schema
/// @example scss Change the background color
///   $my-overlay-theme: overlay-theme($background-color: rgba(yellow, .74));
///   // Pass the theme to the css-vars() mixin
///   @include css-vars($my-overlay-theme);
@function overlay-theme(
    $schema: $light-material-schema,
    $background-color: null
) {
    $name: 'igx-overlay';
    $selector: '.igx-overlay__wrapper--modal, .igx-overlay__content--modal';
    $overlay-schema: ();

    @if map.has-key($schema, 'overlay') {
        $overlay-schema: map.get($schema, 'overlay');
    } @else {
        $overlay-schema: $schema;
    }

    $theme: digest-schema($overlay-schema);

    @return extend($theme, (
        name: $name,
        selector: $selector,
        background-color: $background-color,
    ));
}

/// @param {Map} $theme - The theme used to style the component.
@mixin overlay($theme) {
    @include css-vars($theme);

    %overlay-display {
        width: 0;
        height: 0;
        box-sizing: content-box;
    }

    %overlay-wrapper {
        position: fixed;
        inset: 0;
        background: transparent;
        transition: background .25s $in-out-quad;
        pointer-events: none;
        z-index: 10005;
        box-sizing: content-box;
    }

    %overlay-wrapper--modal {
        background: var-get($theme, 'background-color');
        pointer-events: initial;
    }

    %overlay-wrapper--flex {
        display: flex;
    }

    %overlay-wrapper--flex-container {
        display: flex;
        position: absolute;
    }

    %overlay-content {
        position: absolute;
        pointer-events: all;
        box-sizing: content-box;
    }

    %overlay-content--modal {
        pointer-events: initial;
    }

    %overlay-content--elastic {
        overflow: auto;
    }

    %overlay-content--relative {
        position: relative;
    }

    %igx-toggle--hidden {
        display: none !important;
    }
}
