@use 'sass:map';
@use '../../base' as *;
@use '../../themes/schemas' as *;

////
/// @group themes
/// @access public
/// @author <a href="https://github.com/simeonoff" target="_blank">Simeon Simeonoff</a>
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// @deprecated Use the `css-vars` mixin instead.
/// @see {mixin} css-vars
/// @param {Map} $theme - The calendar theme used to style the component.
@mixin date-picker($theme) {
    $variant: map.get($theme, '_meta', 'theme');
    $theme-variant: map.get($theme, '_meta', 'variant');
    $bootstrap-theme: $variant == 'bootstrap';
    $border-shadow: 0 0 0 rem(1px) var-get($theme, 'border-color');

    $action-area-height: map.get((
        'material': (rem(40px), rem(46px), rem(52px)),
        'fluent': (rem(40px), rem(48px), rem(54px)),
        'bootstrap': (rem(47px), rem(54px), rem(64px)),
        'indigo': (rem(40px), rem(44px), rem(48px)),
    ), $variant);

    %date-picker {
        // TODO move the shadow in the schemas
        box-shadow: $border-shadow, elevation(24);
        border-radius: var-get($theme, 'border-radius');
        background: var-get($theme, 'content-background');
        overflow: hidden;

        @if $variant == 'indigo' and  $theme-variant == 'light' {
            box-shadow: $border-shadow, elevation(5);
        } @else if $variant == 'indigo' and $theme-variant == 'dark' {
            box-shadow: $border-shadow, elevation(7);
        }

        igx-calendar,
        %days-view,
        %months-view,
        %years-view {
            box-shadow: none;
            border-radius: 0;
        }

        igx-divider {
            --color: #{var-get($theme, 'actions-divider-color')};
        }
    }

    %date-picker--dropdown {
        display: flex;
        flex: 1 0 0;
        flex-direction: column;
        box-shadow: $border-shadow, elevation(3);

        @if $variant == 'indigo' and $theme-variant == 'dark' {
            box-shadow: $border-shadow, elevation(2);
        }
    }

    %date-picker__buttons {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        padding: rem(8px);
    }

    %date-picker__actions {
        @include sizable();

        --component-size: var(--ig-size, #{var-get($theme, 'default-size')});

        min-height: sizable($action-area-height...);
        display: flex;
        justify-content: flex-end;

        @if $variant == 'indigo' {
            padding: rem(8px) rem(16px);
        } @else {
            padding: rem(8px);
        }

        gap: rem(8px);

        // TODO remove this line after the override (--component-size: var(--ig-size, var(--ig-size-large)) is removed
        [igxButton] {
            --component-size: var(--ig-size, #{var-get($theme, 'default-size')}) !important;
        }
    }

    %date-picker--readonly igx-input-group {
        igx-prefix,
        [igxPrefix],
        igx-suffix,
        [igxSuffix] {
            color: var(--disabled-text-color);

            @if $variant == 'fluent' {
                background: transparent;
            }

            @if $variant == 'bootstrap' {
                background: var(--border-disabled-background);
            }
        }

        @if $variant == 'bootstrap' {
            %form-group-input {
                background: var(--border-disabled-background);
            }
        }

        &%form-group-display--box:not(%form-group-display--disabled) {
            %form-group-bundle {
                background: var(--box-background-focus);

                &:hover {
                    &:has(input[readonly][role="combobox"])::after {
                        border-block-end-color: var(--idle-bottom-line-color);
                    }
                }
            }
        }

        &%form-group-display--border:not(%form-group-display--disabled) {
            %form-group-bundle:hover {
                %form-group-bundle-start,
                %igx-input-group__filler,
                %form-group-bundle-end {
                    border-color: var(--border-color);
                }

                %igx-input-group__notch {
                    border-block-start-color: var(--border-color);
                    border-block-end-color: var(--border-color);
                }
            }
        }
        
        &:not(%form-group-display--disabled) {
            %form-group-bundle:not(:focus-within) {
                @if $variant == 'indigo' {
                    &::after {
                        border-block-end-color: var(--disabled-text-color);
                    }

                    &:hover {
                        background: unset;
                    }
                }

                &:hover:has(input[readonly][role="combobox"]) {
                    &::before {
                        @if $variant == 'fluent' {
                            box-shadow: inset 0 0 0 rem(1px) var(--border-color);
                        }
                    }

                    &::after {
                        @if $variant == 'material' {
                            border-block-end-color: var(--border-color);
                        } @else if $variant == 'indigo' {
                            border-block-end-color: var(--disabled-text-color);
                        } 
                    }
                }
            }
        }

        &:hover {
            %form-group-input--hover {
                cursor: default;
                color: va(--filled-text-color);

                &::placeholder {
                    color: var(--placeholder-color);
                }
            }
        }
    }
}
