/* stylelint-disable max-nesting-depth */
@use 'sass:map';
@use 'igniteui-theming/sass/animations' as *;
@use 'igniteui-theming/sass/bem' as *;
@use 'igniteui-theming/sass/themes' as *;
@use 'igniteui-theming/sass/typography' as *;
@use 'igniteui-theming/sass/color/functions' as *;
@use 'styles/themes/standalone' as *;
@use './light/tokens' as *;

$_theme: $material;

@include layer(base) {
    @include scale-in-out($start-scale: 0.9);

    %radio-label {
        color: var-get($_theme, 'label-color');
        user-select: none;
        word-wrap: break-all;

        &:empty {
            display: none;
        }
    }

    %radio-ripple-empty {
        background: var-get($_theme, 'empty-color');
        transition: background 0.2s $ease-out-quad;
    }

    %radio-ripple--hover {
        @extend %radio-ripple-empty;
        opacity: 0.06;

        @container style(--ig-theme-variant: dark) {
            opacity: 0.12;
        }
    }

    %radio-ripple--hover-checked {
        background: var-get($_theme, 'fill-color');
    }

    %radio-ripple--hover-invalid {
        background: var-get($_theme, 'error-color');
    }

    %radio-ripple--pressed {
        opacity: 0.12;

        @container style(--ig-theme-variant: dark) {
            opacity: 0.24;
        }
    }

    %radio-ripple--focused {
        @extend %radio-ripple-empty;
        @extend %radio-ripple--pressed;
    }

    @include b(igx-radio) {
        position: relative;
        display: inline-flex;
        flex-flow: row nowrap;
        align-items: center;
        color: var-get($_theme, 'label-color');
        width: max-content;
        cursor: pointer;

        &:hover {
            @include e(composite) {
                &::before {
                    background: var-get($_theme, 'hover-color');
                }
            }

            @include e(ripple) {
                @extend %radio-ripple--hover;
            }
        }

        &:active {
            @include e(composite) {
                &::before {
                    background: var-get($_theme, 'hover-color');
                }
            }

            @include e(ripple) {
                @extend %radio-ripple--hover;
                @extend %radio-ripple--pressed;
            }
        }

        @include e(input) {
            @include hide-default();
        }

        @include e(composite) {
            position: relative;
            display: inline-block;
            width: var(--size);
            height: var(--size);
            min-width: var(--size);
            line-height: var(--size);
            color: var-get($_theme, 'label-color');
            user-select: none;

            --igx-ripple-color: #{var-get($_theme, 'empty-color')};

            &::before,
            &::after {
                position: absolute;
                content: '';
                width: var(--size);
                height: var(--size);
                inset-inline-start: 0;
                top: 0;
                border-radius: border-radius(50%);
            }

            &::before {
                backface-visibility: hidden;
                z-index: 1;
                transform: scale(0);
                transition: all 0.2s $ease-out-quad;
            }

            &::after {
                border: var(--border-width) solid
                    var-get($_theme, 'empty-color');
                background: var-get($_theme, 'empty-fill-color');
            }
        }

        @include e(label) {
            @extend %radio-label;

            margin-inline-start: var(--label-margin);
        }

        @include e(label, $m: before) {
            @extend %radio-label;

            order: -1;
            margin-inline-end: var(--label-margin);
        }

        @include e(ripple) {
            --_ripple-size: #{rem(40px)};

            display: none;
            position: absolute;
            top: calc(50% - calc(var(--_ripple-size) / 2));
            inset-inline-start: calc(50% - calc(var(--_ripple-size) / 2));
            width: var(--_ripple-size);
            aspect-ratio: 1;
            // should be moved to the schema file like the switch and checkbox
            border-radius: calc(var(--_ripple-size) / 2);
            overflow: hidden;
            pointer-events: none;
            filter: opacity(1);
        }

        @include m(focused) {
            @include e(ripple) {
                @extend %radio-ripple--focused;
            }

            &:hover {
                @include e(ripple) {
                    @extend %radio-ripple--focused;
                }
            }
        }

        @include m(checked) {
            @include e(composite) {
                --igx-ripple-color: #{var-get($_theme, 'fill-color')};

                &::before {
                    border: var(--border-width) solid
                        var-get($_theme, 'fill-color');
                    background: var-get($_theme, 'fill-color');
                    transform: var(--scale);
                }

                &::after {
                    border: var(--border-width) solid
                        var-get($_theme, 'fill-color');
                }
            }

            &:hover {
                @include e(composite) {
                    &::before {
                        background: var-get($_theme, 'fill-color-hover');
                        border-color: var-get(
                            $_theme,
                            'fill-hover-border-color'
                        );
                    }

                    &::after {
                        border-color: var-get(
                            $_theme,
                            'fill-hover-border-color'
                        );
                    }
                }

                @include e(ripple) {
                    @extend %radio-ripple--hover;
                    @extend %radio-ripple--hover-checked;
                }
            }

            &:active {
                @include e(composite) {
                    &::before {
                        background: var-get($_theme, 'fill-color-hover');
                        border-color: var-get(
                            $_theme,
                            'fill-hover-border-color'
                        );
                    }

                    &::after {
                        border-color: var-get(
                            $_theme,
                            'fill-hover-border-color'
                        );
                    }
                }

                @include e(ripple) {
                    @extend %radio-ripple--hover;
                    @extend %radio-ripple--hover-checked;
                    @extend %radio-ripple--pressed;
                }
            }
        }

        @include mx(focused, checked) {
            &:hover {
                @include e(composite) {
                    &::before {
                        background: var-get($_theme, 'fill-color-hover');
                        border-color: var-get(
                            $_theme,
                            'fill-hover-border-color'
                        );
                    }

                    &::after {
                        border-color: var-get(
                            $_theme,
                            'fill-hover-border-color'
                        );
                    }
                }
            }

            &:active {
                @include e(composite) {
                    &::before {
                        background: var-get($_theme, 'fill-color-hover');
                        border-color: var-get(
                            $_theme,
                            'fill-hover-border-color'
                        );
                    }

                    &::after {
                        border-color: var-get(
                            $_theme,
                            'fill-hover-border-color'
                        );
                    }
                }
            }

            @include e(ripple) {
                @extend %radio-ripple--focused;

                background: var-get($_theme, 'fill-color');
            }
        }

        @include m(invalid) {
            @include e(composite) {
                --igx-ripple-color: #{var-get($_theme, 'error-color')};

                &::after {
                    border: var(--border-width) solid
                        var-get($_theme, 'error-color');
                }
            }

            @include e(label) {
                color: var-get($_theme, 'error-color');
            }

            @include e(label, $m: before) {
                color: var-get($_theme, 'error-color');
            }

            &:hover {
                @include e(ripple) {
                    @extend %radio-ripple--hover;
                    @extend %radio-ripple--hover-invalid;
                }

                @include e(composite) {
                    &::before {
                        background: var-get($_theme, 'error-color');
                    }

                    &::after {
                        border-color: var-get($_theme, 'error-color-hover');
                    }
                }
            }

            &:active {
                @include e(composite) {
                    &::before {
                        background: var-get($_theme, 'error-color');
                    }

                    &::after {
                        border-color: var-get($_theme, 'error-color-hover');
                    }
                }

                @include e(ripple) {
                    @extend %radio-ripple--hover;
                    @extend %radio-ripple--hover-invalid;
                    @extend %radio-ripple--pressed;
                }
            }
        }

        @include mx(focused, invalid) {
            @include e(ripple) {
                @extend %radio-ripple--focused;

                background: var-get($_theme, 'error-color');
            }
        }

        @include mx(checked, invalid) {
            @include e(composite) {
                &::after {
                    border: var(--border-width) solid
                        var-get($_theme, 'error-color');
                }

                &::before {
                    background: var-get($_theme, 'error-color');
                    border: var(--border-width) solid transparent;
                }
            }

            &:hover {
                @include e(composite) {
                    &::before {
                        background: var-get($_theme, 'error-color-hover');
                        border-color: var-get($_theme, 'error-color-hover');
                    }

                    &::after {
                        border: var(--border-width) solid
                            var-get($_theme, 'error-color-hover');
                    }
                }
            }

            &:active {
                @include e(composite) {
                    &::before {
                        background: var-get($_theme, 'error-color-hover');
                        border-color: var-get($_theme, 'error-color-hover');
                    }

                    &::after {
                        border: var(--border-width) solid
                            var-get($_theme, 'error-color-hover');
                    }
                }
            }
        }

        @include mx(checked, invalid, focused) {
            @include e(composite) {
                &::after {
                    border: var(--border-width) solid
                        var-get($_theme, 'error-color');
                }

                &::before {
                    background: var-get($_theme, 'error-color');
                    border-color: var-get($_theme, 'error-color');
                }
            }
        }

        @include m(disabled) {
            pointer-events: none;
            color: var-get($_theme, 'disabled-label-color');
            user-select: none;

            @include e(composite) {
                &::after {
                    border: var(--border-width) solid
                        var-get($_theme, 'disabled-color');
                }
            }

            @include e(label) {
                color: var-get($_theme, 'disabled-label-color');
            }

            @include e(label, $m: before) {
                color: var-get($_theme, 'disabled-label-color');
            }
        }

        @include mx(disabled, checked) {
            @include e(composite) {
                &::after {
                    border: var(--border-width) solid
                        var-get($_theme, 'disabled-fill-color');
                }

                &::before {
                    background: var-get($_theme, 'disabled-fill-color');
                    border: var(--border-width) solid transparent;
                }
            }
        }
    }

    @include b(igx-radio-group) {
        display: grid;
        column-gap: var(--horizontal-group-margin);
        align-items: start;
        width: max-content;

        &:not(.igx-radio-group--vertical) {
            [igxLabel] {
                margin-block-end: rem(16px);
            }

            igx-radio {
                grid-row: 2;
            }
        }

        @include m(vertical) {
            row-gap: var(--vertical-group-margin);

            [igxLabel] {
                margin-block-end: rem(8px);
            }
        }

        @include mx(before, vertical) {
            igx-radio,
            [igxLabel] {
                justify-self: flex-end;
            }
        }

        @include m(disabled) {
            [igxLabel] {
                color: var-get($_theme, 'disabled-color');
            }
        }
    }
}
