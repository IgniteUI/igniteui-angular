@use 'igniteui-theming/sass/bem' as *;
@use 'igniteui-theming/sass/color/functions' as *;
@use 'igniteui-theming/sass/themes/functions' as *;
@use 'igniteui-theming/sass/typography' as *;
@use 'igniteui-theming/sass/animations' as *;
@use '../light/themes' as *;

$theme: $fluent;

@container style(--theme: fluent) {
    @include b(igx-checkbox) {
        --size: #{rem(20px)};
        --border-width: #{rem(1px)};
        --label-margin: #{rem(8px)};
        --mark-stroke: 1;
        --mark-length: 24;
        --mark-offset: -1px;

        &:hover {
            @include e(composite-mark) {
                // TODO: Check if this is even needed?
                position: absolute;
                inset: 0;
                stroke-linecap: square;
                stroke-width: var(--mark-stroke);
                stroke-dasharray: var(--mark-length);
                stroke-dashoffset: 0;
                fill: none;
                z-index: 1;
                opacity: 1;
                transition:
                    all 0.2s $ease-out-quad,
                    opacity 0.2s $ease-out-quad;

                stroke: var-get($theme, 'tick-color-hover');
            }
        }

        @include e(label) {
            @include type-style(body-2) {
                margin-block: 0;
            }
        }

        @include m(indeterminate) {
            &:hover {
                @include e(composite) {
                    background: transparent;
                }

                @include e(composite-mark) {
                    stroke: transparent;
                }
            }
        }

        @include m(invalid) {
            &:hover {
                @include e(composite-mark) {
                    stroke: var-get($theme, 'error-color');
                }
            }
        }

        @include mx(indeterminate, invalid) {
            @include e(composite) {
                border-color: var-get($theme, 'error-color');

                &::before {
                    background: var-get($theme, 'error-color');
                }
            }

            &:hover {
                @include e(composite) {
                    background: transparent;
                    border-color: var-get($theme, 'error-color-hover');

                    &::before {
                        background: var-get($theme, 'error-color-hover');
                    }
                }
            }
        }

        @include mx(indeterminate, invalid, checked) {
            @include e(composite) {
                background: transparent;
            }
        }

        @include mx(indeterminate, disabled) {
            @include e(composite) {
                background: var-get($theme, 'disabled-color');
            }

            @include e(composite-mark) {
                stroke: var-get($theme, 'disabled-tick-color');
            }
        }

        @include mx(invalid, checked) {
            &:hover {
                @include e(composite-mark) {
                    stroke: var-get($theme, 'tick-color');
                }
            }
        }
    }
}
