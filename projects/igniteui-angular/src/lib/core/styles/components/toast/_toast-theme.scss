@use '../../base' as *;
@use '../../themes/schemas' as *;
@use '../../typography/base' as *;
@use 'sass:map';

////
/// @group themes
/// @access public
/// @author <a href="https://github.com/simeonoff" target="_blank">Simeon Simeonoff</a>
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// If only background color is specified,
/// the text-color will be assigned automatically to a contrasting color.
///
/// @param {Map} $palette [null] - The palette used as basis for styling the component.
/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.
///
/// @param {Color} $background [null] - The background color used for the toast.
/// @param {Color} $text-color [null] - The text-color used for the toast.
///
/// @param {border-radius} $border-radius [null] - The border radius used for the toast component.
/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the toast.
///
///
/// @requires $default-palette
/// @requires $light-schema
/// @requires apply-palette
/// @requires text-contrast
/// @requires extend
/// @requires elevation
///
/// @example scss Set a custom background color
///   $my-toast-theme: toast-theme($background: green);
///   // Pass the theme to the toast component mixin
///   @include toast($my-toast-theme);
@function toast-theme(
    $palette: null,
    $schema: $light-schema,

    $border-radius: null,
    $background: null,
    $text-color: null,
    $shadow: null,
) {
    $name: 'igx-toast';
    $toast-schema: ();

    @if map.has-key($schema, $name) {
        $toast-schema: map.get($schema, $name);
    } @else {
        $toast-schema: $schema;
    }

    $theme: apply-palette($toast-schema, $palette);

    @if not($shadow) {
        $elevation: map.get($toast-schema, 'elevation');
        $shadow: elevation($elevation: $elevation);
    }

    @if not($text-color) and $background {
        $text-color: text-contrast($background);
    }

    @return extend($theme, (
        name: $name,
        palette: $palette,
        background: $background,
        border-radius: $border-radius,
        text-color: $text-color,
        shadow: $shadow
    ));
}

/// Toast Component
/// @param {Map} $theme - The theme used to style the component.
/// @requires {mixin} css-vars
/// @requires rem
/// @requires var-get
@mixin toast($theme) {
    @include css-vars($theme);

    $variant: map.get($theme, variant);

    $palette: map.get($theme, 'palette');
    $width: 52px;
    $margin: rem(42px) auto;

    $padding: map.get((
        'material': rem(16px) rem(24px),
        'fluent': rem(16px) rem(24px),
        'bootstrap': rem(12px),
        'indigo-design': rem(14px) rem(24px)
    ), $variant);

    $border: map.get((
        'material': none,
        'fluent': none,
        'bootstrap': 1px solid color($palette, 'grays', 300),
        'indigo-design': none
    ), $variant);

    %igx-toast-display {
        display: inline-flex;
        justify-content: center;
        align-items: center;
        margin: $margin;
        padding: $padding;
        min-width: $width;
        color: var-get($theme, 'text-color');
        background: var-get($theme, 'background');
        border: $border;
        border-radius: border-radius(var-get($theme, 'border-radius'));
        box-shadow: map.get($theme, 'shadow');
        backdrop-filter: blur(10px);
    }
}

/// Adds typography styles for the igx-toast component.
/// Uses the 'body-2'
/// category from the typographic scale.
/// @group typography
/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.
/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.
/// @requires {mixin} type-style
@mixin toast-typography($type-scale, $categories: (text: 'body-2')) {
    $text: map.get($categories, 'text');

    %igx-toast-display > *{
        @include type-style($type-scale, $text) {
            margin: 0;
        }
    }
}
