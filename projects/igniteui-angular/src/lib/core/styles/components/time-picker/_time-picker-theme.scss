@use 'sass:map';
@use 'sass:meta';
@use '../../base' as *;
@use '../../themes/schemas' as *;

////
/// @group themes
/// @access public
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// If only background color is specified, text/icon color
/// will be assigned automatically to a contrasting color.
/// Does ___not___ apply for disabled state colors.
/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.
/// @param {Color} $text-color [null] - The text color of a open time picker.
/// @param {Color} $hover-text-color [null] - The hover text color of a open time picker.
/// @param {Color} $selected-text-color [null] -  The text color of a selected item in time picker.
/// @param {Color} $active-item-background [null] - The background color for current item in focused column inside the time picker.
/// @param {Color} $active-item-foreground [null] - The foreground color for current item in focused column inside the time picker.
/// @param {Color} $disabled-text-color [null] - The text color for disabled values.
/// @param {Color} $disabled-item-background [null] - The background color for disabled values .
/// @param {Color} $header-background [null] - The header background color of a time picker.
/// @param {Color} $header-hour-text-color [null] - The header hour text color of a time picker.
/// @param {Color} $background-color [null] - The time-picker panel background color.
/// @param {Number} $time-item-size [null] - The height of the time item.
/// @param {Color} $divider-color [null] - The color for the actions area divider.
/// @param {Color} $border-color [null] - The border color around the time picker.
/// @param {box-shadow} $modal-shadow [null] - The custom shadow to be used for the time picker in modal mode.
/// @param {box-shadow} $dropdown-shadow [null] - The custom shadow to be used for the time picker in dropdown mode.
/// @param {List} $border-radius [null] - The border radius used for the outline of the picker.
/// @param {List} $active-item-border-radius [null] - The border radius used for the outline of the currently active item (hours, minutes, AM/PM).
/// @requires $light-material-schema
/// @example scss Change the background and text colors in  time picker
///   $my-time-picker-theme: time-picker-theme(
///     $text-color: white,
///     $background-color: black
///   );
///   // Pass the theme to the css-vars() mixin
///   @include css-vars($my-time-picker-theme);
@function time-picker-theme(
    $schema: $light-material-schema,

    $border-radius: null,
    $active-item-border-radius: null,

    $text-color: null,
    $hover-text-color: null,
    $selected-text-color: null,
    $active-item-background: null,
    $active-item-foreground: null,
    $disabled-text-color: null,
    $disabled-item-background: null,
    $header-background: null,
    $header-hour-text-color: null,
    $background-color: null,
    $modal-shadow: null,
    $dropdown-shadow: null,
    $border-color: null,
    $divider-color: null,
    $time-item-size: null,
) {
    $name: 'igx-time-picker';
    $selector: '.igx-time-picker';
    $time-picker-schema: ();

    @if map.has-key($schema, 'time-picker') {
        $time-picker-schema: map.get($schema, 'time-picker');
    } @else {
        $time-picker-schema: $schema;
    }

    $theme: digest-schema($time-picker-schema);
    $meta: map.get($theme, '_meta');

    @if not($text-color) and $background-color {
        $text-color: text-contrast($background-color);
    }

    @if not($header-hour-text-color) and $header-background {
        $header-hour-text-color: text-contrast($header-background);
    }

    @if not($selected-text-color) and $active-item-background {
        $selected-text-color: text-contrast($active-item-background);
    }

    @if not($active-item-background) and $background-color {
        @if meta.type-of($background-color) == 'color' {
            $active-item-background: rgba(text-contrast($background-color), .12);
        }
    }

    @if not($disabled-text-color) and $disabled-item-background {
        @if meta.type-of($disabled-item-background) == 'color' {
            $disabled-text-color: rgba(text-contrast($disabled-item-background), .6);
        }
    }

    @if not($divider-color) and $border-color {
        @if meta.type-of($border-color) == 'color' {
            $divider-color: $border-color;
        }
    }

    @if not($modal-shadow) {
        $elevation: map.get($time-picker-schema, 'modal-elevation');
        $modal-shadow: elevation($elevation);
    }

    @if not($dropdown-shadow) {
        $elevation: map.get($time-picker-schema, 'dropdown-elevation');
        $dropdown-shadow: elevation($elevation);
    }

    @return extend($theme, (
        name: $name,
        selector: $selector,
        text-color: $text-color,
        hover-text-color: $hover-text-color,
        selected-text-color: $selected-text-color,
        active-item-foreground: $active-item-foreground,
        active-item-background: $active-item-background,
        disabled-text-color: $disabled-text-color,
        disabled-item-background: $disabled-item-background,
        header-background: $header-background,
        header-hour-text-color: $header-hour-text-color,
        background-color: $background-color,
        modal-shadow: $modal-shadow,
        dropdown-shadow: $dropdown-shadow,
        border-radius: $border-radius,
        border-color: $border-color,
        divider-color: $divider-color,
        time-item-size: $time-item-size,
        active-item-border-radius: $active-item-border-radius,
        theme: map.get($schema, '_meta', 'theme'),
        _meta: map.merge(if($meta, $meta, ()), (
            variant: map.get($schema, '_meta', 'theme')
        )),
    ));
}

/// @deprecated Use the `css-vars` mixin instead.
/// @see {mixin} css-vars
/// @param {Map} $theme - The theme used to style the component.
@mixin time-picker($theme) {
    @include css-vars($theme);

    $variant: map.get($theme, '_meta', 'variant');
    $not-bootstrap-theme: $variant != 'bootstrap';

    $picker-buttons-padding: map.get((
        'material': rem(8px),
        'fluent': rem(8px),
        'bootstrap': rem(8px),
        'indigo': rem(8px) rem(16px),
    ), $variant);

    $picker-header-padding: map.get((
        'material': rem(16px) rem(24px),
        'fluent': rem(16px),
        'bootstrap': rem(16px),
        'indigo': rem(16px),
    ), $variant);

    %time-picker-display {
        @include sizable();

        --component-size: var(--ig-size, #{var-get($theme, 'default-size')});

        display: flex;
        flex-flow: column nowrap;
        border-radius: var-get($theme, 'border-radius');
        box-shadow: 0 0 0 rem(1px) var-get($theme, 'border-color'),
            var-get($theme, 'modal-shadow');
        background: var-get($theme, 'background-color');
        overflow: hidden;
        min-width: fit-content;

        igx-divider {
            --color: #{var-get($theme, 'divider-color')};
        }
    }

    %time-picker__main {
        flex: 1 1 auto;
    }

    %time-picker__main--vertical {
        display: flex;
        flex-grow: 1;
    }

    %time-picker__body--vertical {
        flex-grow: 1;
    }

    %time-picker--dropdown {
        min-width: sizable(rem(290px), rem(314px), rem(360px));
        box-shadow: inset 0 0 0 rem(1px) var-get($theme, 'border-color'),
            var-get($theme, 'dropdown-shadow');

        %time-picker__body {
            min-width: auto;
        }
    }

    %time-picker__body {
        display: flex;
        min-width: sizable(rem(290px), rem(314px), rem(360px));
        padding-block: rem(16px);
        justify-content: center;
    }

    %time-picker__wrapper {
        display: flex;
        flex-direction: column;
    }

    %time-picker-content {
        width: 100%;
        padding: 0;
        color: inherit;
        line-height: initial;
    }

    %time-picker-dialog-title {
        display: none;
    }

    %time-picker__hourList {
        text-align: end;

        [dir='rtl'] & {
            order: 2;
        }
    }

    %time-picker__minuteList {
        text-align: center;

        [dir='rtl'] & {
            order: 1;
        }
    }

    %time-picker__secondsList {
        text-align: center;
    }

    %time-picker__ampmList {
        display: flex;
        flex-direction: column;
        padding-top: rem(48px);

        [dir='rtl'] & {
            order: 3;
        }
    }

    %time-picker__column {
        width: if($variant == 'indigo', rem(54px), rem(64px));
        padding: 0;
        cursor: pointer;
        display: flex;
        flex-flow: column nowrap;
        justify-content: space-between;
        align-items: center;
        color: var-get($theme, 'text-color');
        overflow: hidden;
        gap: rem(4px);

        &:focus,
        &:active {
            outline: none;
        }
    }

    %time-picker__item {
        width: rem(46px);
        padding: rem(5px) rem(10px);
        border-radius: var-get($theme, 'active-item-border-radius');
        height: var-get($theme, 'time-item-size');
        display: flex;
        justify-content: center;
        align-items: center;

        &:focus,
        &:active {
            outline: none;
        }

        &:hover {
            color: var-get($theme, 'hover-text-color');
        }
    }

    %time-picker__item:not(%time-picker__item--selected) {
        font-size: sizable(var(--ig-body-2-font-size), var(--ig-body-2-font-size), var(--ig-body-1-font-size));
        font-weight: sizable(var(--ig-body-2-font-weight), var(--ig-body-2-font-weight), var(--ig-body-1-font-weight));
        font-style: sizable(var(--ig-body-2-font-style), var(--ig-body-2-font-style), var(--ig-body-1-font-style));
        line-height: sizable(var(--ig-body-2-line-height), var(--ig-body-2-line-height), var(--ig-body-1-line-height));
        letter-spacing: sizable(var(--ig-body-2-letter-spacing), var(--ig-body-2-letter-spacing), var(--ig-body-1-letter-spacing));
        text-transform: sizable(var(--ig-body-2-text-transform), var(--ig-body-2-text-transform), var(--ig-body-1-text-transform));
    }

    %time-picker__item--selected {
        color: var-get($theme, 'selected-text-color');
    }

    %time-picker__item--active {
        color: var-get($theme, 'active-item-foreground');
        background: var-get($theme, 'active-item-background');

        &:hover,
        &:focus {
            color: var-get($theme, 'active-item-foreground');
        }
    }

    %time-picker__item--disabled {
        color: var-get($theme, 'disabled-text-color');
        background: var-get($theme, 'disabled-item-background');
        pointer-events: none;
    }

    %time-picker__header {
        display: flex;
        flex-direction: column;

        padding: $picker-header-padding;

        @if $variant == 'indigo' {
            gap: rem(2px);
        }

        background: var-get($theme, 'header-background');
    }

    %time-picker-display:not(%time-picker-display--vertical) {
        %time-picker__header {
            @if $variant == 'indigo' {
                border-block-end: rem(1px) solid var-get($theme, 'divider-color');
            }
        }
    }

    %time-picker__header--vertical {
        @if $variant == 'indigo' {
            min-width: rem(136px);
            border-inline-end: rem(1px) solid var-get($theme, 'divider-color');
        } @else {
            min-width: rem(168px);
        }
    }

    %time-picker__header-hour {
        display: flex;
        color: var-get($theme, 'header-hour-text-color');
        margin: 0;

        [dir='rtl'] & {
            flex-direction: row-reverse;
            justify-content: flex-end;
        }
    }

    %time-picker__buttons {
        display: flex;
        min-height: sizable(rem(40px), rem(44px), rem(48px));
        justify-content: flex-end;
        align-items: center;
        padding: $picker-buttons-padding;
        gap: rem(8px);

        @if $variant == 'indigo' {
            [igxbutton] {
                min-width: rem(88px);
            }
        }
    }

    %time-picker__buttons--vertical {
        align-items: flex-end;
    }
}

/// Adds typography styles for the igx-calendar component.
/// Uses the 'h4', 'subtitle-1' and 'body-1'
/// category from the typographic scale.
/// @group typography
/// @param {Map} $categories [(header-time-period: 'subtitle-1', header-hour: 'h4', content: 'body-1')] - The categories from the typographic scale used for type styles.
@mixin time-picker-typography($categories: (
    header-time-period: 'subtitle-1',
    header-hour: 'h4',
    selected-time: 'h5'
)) {
    $header-hour: map.get($categories, 'header-hour');
    $selected-time: map.get($categories, 'selected-time');

    %time-picker__header-hour {
        @include type-style($header-hour, false) {
            margin-top: 0;
            margin-bottom: 0;
        }
    }

    %time-picker__item--selected {
        @include type-style($selected-time) {
            margin-top: 0;
            margin-bottom: 0;
        }
    }
}
