@use '../../base' as *;
@use '../../themes/schemas' as *;
@use 'sass:map';

////
/// @group themes
/// @access privet
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// Returns a map containing all style properties related to the theming the watermark directive.
/// @param {Map} $palette [null] - The palette used as basis for styling the component.
/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.
/// @param {Number} $border-radius [null] - The border radius used for the link.
/// @param {Color} $border-color [null] - The border color used for the  link.
/// @param {Color} $link-background [null] - The background color used for the link.
/// @param {Color} $color [null] - The color used for the link text.
///
/// @requires $default-palette
/// @requires $light-schema
/// @requires apply-palette
/// @requires extend
/// @requires text-contrast
///
/// @example scss Change the watermark link background
///   $my-watermark-theme: watermark-theme($link-background: magenta);
///   // Pass the theme to the watermark component mixin
///   @include watermark($my-watermark-theme);
@function watermark-theme(
    $palette: null,
    $schema: $light-schema,

    $border-radius: null,
    $background-image: null,
    $link-background: null,
    $color: null,
    $border-color: null,
) {
    $name: 'igx-watermark';
    $watermark-schema: ();

    @if map.has-key($schema, $name) {
        $watermark-schema: map.get($schema, $name);
    } @else {
        $watermark-schema: $schema;
    }

    $theme: apply-palette($watermark-schema, $palette);

    @if not($color) and $link-background {
        $color: text-contrast($link-background);
    }

    @return extend($theme, (
        name: $name,
        palette: $palette,
        background-image: $background-image,
        link-background: $link-background,
        border-radius: $border-radius,
        color: $color,
        border-color: $border-color,
    ));
}

/// @param {Map} $theme - The theme used to style the component.
/// @requires {mixin} css-vars
/// @requires var-get
@mixin watermark($theme) {
    @include css-vars($theme);

    %igx-watermark {
        display: block;
        position: absolute;
        bottom: 0;
        inset-inline-end: 0;
        width: 100%;
        height: 100%;
        z-index: 10000;
        pointer-events: none;
    }

    %igx-watermark__link {
        display: inline-flex;
        align-items: center;
        position: absolute;
        bottom: 0;
        inset-inline-end: 0;
        font-size: rem(14px);
        padding: rem(2px) rem(4px);
        line-height: normal;
        border-radius: border-radius(var-get($theme, 'border-radius'));
        border: 1px solid var-get($theme, 'border-color');
        color: var-get($theme, 'color');
        z-index: 10002;
        background-color: var-get($theme, 'link-background');
        pointer-events: all;
        text-decoration: none;
    }

    %igx-watermark__background-img {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        inset-inline-start: 0;
        z-index: 10001;
        pointer-events: none;
        background-image: var-get($theme, 'background-image');
        background-repeat: repeat;
        background-position: rem(16px) rem(16px);
        // Target only IE 10,11.
        @media all and (-ms-high-contrast: none)
        {
            background-image: none;
        }
    }
}
