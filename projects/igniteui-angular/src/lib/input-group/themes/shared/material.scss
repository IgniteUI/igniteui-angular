@use 'igniteui-theming/sass/typography' as *;
@use 'igniteui-theming/sass/bem' as *;
@use 'styles/themes/standalone' as *;
@use 'igniteui-theming/sass/animations/easings' as *;
@use '../light/tokens' as *;

$_theme: $material;
$transition-timing: .25s $out-cubic;
$bundle-start-end-min-width: pad(rem(10px), rem(12px), rem(14px));
$input-inline-padding: rem(4px);
$input-top-padding: rem(20px);
$input-bottom-padding: rem(6px);

// TODO: Talk to simo about this
@layer ig.material {
    @container style(--ig-theme: material) {
        %box-floating-label {
            @include type-style(caption);
            transform: translateY(-73%);
        }

        %box-floating-text-area-label {
            transform: translateY(0);
            inset-block-start: calc(#{$input-top-padding} / 4);

        }

        %border-textarea-floating-label {
            display: inline-block;
            transform-origin: left top;
            position: relative;
            inset-block: 0;
            transform: translateY(-50%);
            margin-block-end: auto;
        }
    }
}

@include themed-block(igx-input-group, material) {
    --_prefix-suffix-spacing: #{pad-inline(rem(12px), rem(14px), rem(16px))};

    row-gap: rem(4px);

    @include e(file-input) {
        @extend %input-paddings;
    }

    @include e(bundle-start) {
        overflow: clip;
        min-width: $bundle-start-end-min-width;

        border: {
            start: {
                start-radius: calc(var-get($_theme, 'box-border-radius') - rem(1px));
            };
        }
    }

    @include e(bundle-end) {
        overflow: clip;
        min-width: $bundle-start-end-min-width;

        border: {
            start: {
                end-radius: calc(var-get($_theme, 'box-border-radius') - rem(1px));
            }
        }
    }

    @include m(base) {
        --_bundle-template-rows: auto;

        %input-paddings {
            padding-block-start: $input-top-padding;
            padding-block-end: $input-bottom-padding;

        }

        @include e(bundle) {
            transition: border-bottom-color $transition-timing;
            align-items: center;
            grid-column: 1 / -1;
            grid-row: 1;

            > * {
                grid-row: 1;
            }
        }

        @include e(bundle-main) {
            padding-inline: $input-inline-padding;
            grid-column: 2;
        }

        @include e(label) {
            padding-inline: $input-inline-padding;
            grid-column: 2;
            z-index: 1;
            grid-row: 1;
            align-self: center;
        }

        @include e(input) {
            @extend %input-paddings;

            padding-inline: 0;
        }

        @include e(hint) {
            grid-row: 2;
        }
    }

    @include m(base, $not: (search)) {
        border-block-start: rem(1px) solid transparent;

        @include e(bundle) {
            &::before,
            &::after {
                content: '';
                position: absolute;
                width: 100%;
                inset-inline-end: 0;
            }

            &::before {
                inset-block-end: 0;
                height: rem(1px);
                border-block-end: rem(1px) solid var-get($_theme, 'idle-bottom-line-color');
                z-index: 1;
            }

            &::after {
                inset-block-end: rem(0px);
                height: rem(2px);
                align-self: end;
                transform: scaleX(0);
                transform-origin: center;
                background: var-get($_theme, 'focused-secondary-color');
                z-index: 2;
            }

            &:hover {
                &::before {
                    border-block-end-color:  var-get($_theme, 'hover-bottom-line-color');
                }
            }
        }
    }

    @include mx(base, focused) {
        @include e(bundle) {
            &::after {
                transform: scaleX(1);
                transition: transform $transition-timing;
            }
        }

        @include e(label) {
            @extend %box-floating-label;

            color: var-get($_theme, 'focused-secondary-color');
        }
    }

    @include mx(base, valid) {
        @include e(bundle) {
            &::before {
                border-block-end-color: rem(1px) solid var-get($_theme, 'success-secondary-color');
            }

            &::after {
                background: var-get($_theme, 'success-secondary-color');
            }
        }
    }

    @include mx(base, warning) {
        @include e(bundle) {
            &::before {
                border-block-end-color: var-get($_theme, 'warning-secondary-color');
            }

            &::after {
                background: var-get($_theme, 'warning-secondary-color');
            }

            &:hover {
                &::before {
                    border-block-end-color: var-get($_theme, 'warning-secondary-color');
                }
            }
        }
    }

    @include mx(base, invalid) {
        @include e(bundle) {
            &::before {
                border-block-end-color: var-get($_theme, 'error-secondary-color');
            }

            &::after {
                background: var-get($_theme, 'error-secondary-color');
            }

            &:hover {
                &::before {
                    border-block-end-color: var-get($_theme, 'error-secondary-color');
                }
            }
        }
    }

    @include mx(base, placeholder) {
        @include e(label) {
            @extend %box-floating-label;
        }
    }

    @include mx(base, filled) {
        @include e(label) {
            @extend %box-floating-label;
        }
    }

    @include mx(base, disabled, ('not': (line))) {
        @include e(bundle) {
            background: var-get($_theme, 'box-disabled-background');
        }
    }

    @include mx(base, textarea-group) {
        @include e(label) {
            top: calc($input-top-padding - #{rem(1px)});
            margin-block-end: auto;
        }

        @include e(bundle-main) {
            padding-block-start: $input-top-padding;
        }
    }

    @include mx(base, textarea-group, placeholder) {
        @include e(label) {
            @extend %box-floating-text-area-label;
        }
    }

    @include mx(base, textarea-group, filled) {
        @include e(label) {
            @extend %box-floating-text-area-label;
        }
    }

    @include mx(base, textarea-group, focused) {
        @include e(label) {
            @extend %box-floating-text-area-label;
        }
    }

    @include m(box) {
        @include e(bundle) {
            background: var-get($_theme, 'box-background');
            border-start-start-radius: var-get($_theme, 'box-border-radius');
            border-start-end-radius: var-get($_theme, 'box-border-radius');
            overflow: clip;
        }

        &:hover {
            @include e(bundle) {
                background: var-get($_theme, 'box-background-hover');
            }
        }
    }

    @include mx(box, focused) {
        @include e(bundle) {
            background: var-get($_theme, 'box-background-focus');
            border-bottom-color: transparent;
        }
    }

    @include mx(base, disabled, ('not': (border, search))) {
        @include e(bundle) {
            &::before {
                border-block-end-color: var-get($_theme, 'disabled-bottom-line-color');
                border-block-end-style: dashed;
            }
        }

        &:hover {
            @include e(bundle) {
                &::before {
                    border-block-end-color: var-get($_theme, 'disabled-bottom-line-color');
                }
            }
        }
    }

    @include m(search) {
        @include e(bundle) {
            background: var-get($_theme, 'search-background');
            border-bottom: none;
            border-radius: var-get($_theme, 'search-border-radius');
            box-shadow: var-get($_theme, 'search-resting-elevation');

            &:hover {
                box-shadow: var-get($_theme, 'search-hover-elevation');
            }
        }

        @include e(bundle-start) {
            border-start-start-radius: var-get($_theme, 'search-border-radius');
            border-end-start-radius: var-get($_theme, 'search-border-radius');
        }

        @include e(bundle-end) {
            border-start-end-radius: var-get($_theme, 'search-border-radius');
            border-end-end-radius: var-get($_theme, 'search-border-radius');
        }
    }

    @include mx(search, disabled) {
        @include e(bundle) {
            background: var-get($_theme, 'search-disabled-background');
            box-shadow: var-get($_theme, 'search-disabled-elevation');
        }
    }

    @include mx(border, textarea-group) {
        @include e(label) {
            top: calc($input-top-padding - #{rem(1px)});
            margin-block-end: auto;
            transform-origin: top left;
            inset-block-start: calc($input-top-padding - #{rem(2px)});
            padding-inline-end: rem(4px);
            transition:
                transform 150ms cubic-bezier(.4, 0, .2, 1),
                color 150ms cubic-bezier(.4, 0, .2, 1),
                font-size 150ms cubic-bezier(.4, 0, .2, 1);
            will-change: transform;
        }
    }

    @include mx(border, textarea-group, filled) {
        @include e(label) {
            @extend %border-textarea-floating-label;
        }
    }

    @include mx(border, textarea-group, focused) {
        @include e(label) {
            @extend %border-textarea-floating-label;
        }
    }

    @include mx(border, textarea-group, placeholder) {
        @include e(label) {
            @extend %border-textarea-floating-label;
        }
    }

    @include mx(base, file) {
        @include e(label) {
            grid-column: 3;
        }

        @include e(bundle-main) {
            grid-column: 3;
        }

        @include e(bundle-end) {
            grid-column: 4;
        }
    }

    @include m(border) {
        --_label-position: #{sizable(18px, 22px, 26px)};
        --_bundle-template-columns: auto auto 1fr auto;
        --_bundle-template-rows: #{var-get($_theme, 'size')} auto;
        --_input-border-size: #{rem(1px)};
        --_input-border-style: solid;
        --_label-translate-top: translateY(calc(var(--_label-position) * -1));

        $border-size: rem(1px);

        %idle-border-styles {
            border-width: var(--_input-border-size);
            border-style: var(--_input-border-style);
            border-color: var-get($_theme, 'border-color');
        }

        @include e(bundle) {
            grid-column: 1 / -1;
            grid-row: 1;

            > * {
                grid-row: 1;
            }
        }

        @include e(inut) {
            width: 100%;
            height: 100%;
            padding: 0;
            border: none;
            outline-style: none;
            z-index: 1;
        }

        @include e(bundle-start) {
            @extend %idle-border-styles;

            border-inline-end-width: 0;
            border-start-start-radius: var-get($_theme, 'border-border-radius');
            border-end-start-radius: var-get($_theme, 'border-border-radius');
        }

        @include e(bundle-main) {
            grid-column: 2 / span 2;
            padding-inline: $input-inline-padding;
        }

        @include e(notch)  {
            @extend %idle-border-styles;

            display: flex;
            align-items: center;
            border-inline: none;
            padding-inline: $input-inline-padding;
            grid-column: 2;
            min-width: 0;
        }

        @include e(filler) {
            @extend %idle-border-styles;

            border-inline: none;
            grid-column: 3;
        }

        @include e(upload) {
            @extend %idle-border-styles;

            border-inline: none;
            grid-column: 2;
            display: flex;
            align-items: center;
        }

        @include e(bundle-end) {
            @extend %idle-border-styles;

            border-inline-start-width: 0;
            grid-column: 4;
            border-start-end-radius: var-get($_theme, 'border-border-radius');
            border-end-end-radius: var-get($_theme, 'border-border-radius');
        }

        @include e(textarea) {
            margin-block-start: $input-top-padding;
            padding: 0;
        }

        @include e(hint) {
            grid-row: 2;
        }

        &:hover {
            @include e(bundle-start) {
                border-color: var-get($_theme, 'hover-border-color');
            }

            @include e(bundle-end) {
                border-color: var-get($_theme, 'hover-border-color');
            }

            @include e(notch) {
                border-color: var-get($_theme, 'hover-border-color');
            }

            @include e(filler) {
                border-color: var-get($_theme, 'hover-border-color');
            }

            @include e(upload) {
                border-color: var-get($_theme, 'hover-border-color');
            }
        }
    }

    @include mx(border, textarea-group) {
        --_bundle-template-rows: auto auto;
    }

    @include mx(border, focused) {
        --_input-border-size: #{rem(2px)};

        $negative-margin: calc((var(--_input-border-size) / 2) * -1);

        @include e(label) {
            @include type-style(caption);

            inset-block-start: calc(var(--_input-border-size) / 2);
            transform: var(--_label-translate-top);

            color: var-get($_theme, 'focused-secondary-color');
        }

        @include e(bundle-start) {
            border-color: var-get($_theme, 'focused-border-color');

            igx-prefix,
            [igxPrefix] {
                margin-inline-start: $negative-margin;
            }
        }

        @include e(bundle-end) {
            border-color: var-get($_theme, 'focused-border-color');

            igx-suffix,
            [igxSuffix] {
                margin-inline-end: $negative-margin;
            }
        }

        @include e(notch) {
            border-block-start-width: 0;
            border-color: var-get($_theme, 'focused-border-color');
        }

        @include e(filler) {
            border-color: var-get($_theme, 'focused-border-color');
        }

        @include e(upload) {
            border-color: var-get($_theme, 'focused-border-color');
        }
    }

    @include mx(border, filled) {
        @include e(label) {
            @include type-style(caption);

            transform: var(--_label-translate-top);
        }

        @include e(notch) {
            border-block-start-width: 0;
        }
    }

    @include mx(border, placeholder) {
        @include e(label) {
            @include type-style(caption);

            transform: var(--_label-translate-top);
        }

        @include e(notch) {
            border-block-start-width: 0;
        }
    }

    @include mx(border, valid) {
        @include e(bundle-start) {
            border-color: var-get($_theme, 'success-secondary-color');
        }

        @include e(notch) {
            border-color: var-get($_theme, 'success-secondary-color');
        }

        @include e(filler) {
            border-color: var-get($_theme, 'success-secondary-color');
        }

        @include e(bundle-end) {
            border-color: var-get($_theme, 'success-secondary-color');
        }

        &:hover {
            @include e(upload) {
                border-color: var-get($_theme, 'success-secondary-color');
            }
        }
    }

    @include mx(border, warning) {
        @include e(bundle-start) {
            border-color: var-get($_theme, 'warning-secondary-color');
        }

        @include e(notch) {
            border-color: var-get($_theme, 'warning-secondary-color');
        }

        @include e(filler) {
            border-color: var-get($_theme, 'warning-secondary-color');
        }

        @include e(bundle-end) {
            border-color: var-get($_theme, 'warning-secondary-color');
        }

        &:hover {
            @include e(upload) {
                border-color: var-get($_theme, 'warning-secondary-color');
            }
        }
    }

    @include mx(border, invalid) {
        @include e(bundle-start) {
            border-color: var-get($_theme, 'error-secondary-color');
        }

        @include e(notch) {
            border-color: var-get($_theme, 'error-secondary-color');
        }

        @include e(filler) {
            border-color: var-get($_theme, 'error-secondary-color');
        }

        @include e(bundle-end) {
            border-color: var-get($_theme, 'error-secondary-color');
        }

        &:hover {
            @include e(upload) {
                border-color: var-get($_theme, 'error-secondary-color');
            }
        }
    }

    @include m(file, $not: (border)) {
        @include e(label) {
            @extend %box-floating-label;
        }
    }

    @include mx(border, file) {
        --_bundle-template-columns: auto auto auto 1fr auto;

        @include e(label) {
            @include type-style(caption);

            transform: var(--_label-translate-top);
        }

        @include e(notch)  {
            border-block-start-width: 0;
            grid-column: 3
        }

        @include e(bundle-main) {
            grid-column: 3 / span 2;
        }

        @include e(filler) {
            grid-column: 4 / 5;
        }

        @include e(bundle-end) {
            grid-area: 1 / 5;
        }
    }

    @include e(hint) {
        min-height: rem(18px);
        padding-inline: sizable(rem(14px), rem(16px), rem(18px));
    }

    @include m(valid) {
        @include e(label) {
            color: #{var-get($_theme, 'success-secondary-color')};
        }

        @include e(hint) {
            color: var-get($_theme, 'success-secondary-color');
        }

        @include e(upload) {
            border-color: var-get($_theme, 'success-secondary-color');;
        }
    }

    @include m(warning) {
        @include e(label) {
            color: #{var-get($_theme, 'warning-secondary-color')};
        }

        @include e(hint) {
            color: var-get($_theme, 'warning-secondary-color');
        }

        @include e(upload) {
            border-color: var-get($_theme, 'warning-secondary-color');;
        }
    }

    @include m(invalid) {
        @include e(label) {
            color: #{var-get($_theme, 'error-secondary-color')};
        }

        @include e(hint) {
            color: var-get($_theme, 'error-secondary-color');
        }

        @include e(upload) {
            border-color: var-get($_theme, 'error-secondary-color');;
        }
    }

    @include mx(valid, focused) {
        @include e(label) {
            color: #{var-get($_theme, 'success-secondary-color')};
        }

        @include e(upload) {
            border-color: var-get($_theme, 'success-secondary-color');;
        }
    }

    @include mx(warning, focused) {
        @include e(label) {
            color: #{var-get($_theme, 'warning-secondary-color')};
        }

        @include e(upload) {
            border-color: var-get($_theme, 'warning-secondary-color');;
        }
    }

    @include mx(invalid, focused) {
        @include e(label) {
            color: #{var-get($_theme, 'error-secondary-color')};
        }

        @include e(upload) {
            border-color: var-get($_theme, 'error-secondary-color');;
        }
    }

    @include e(notch) {
        &:empty {
            display: none;
        }
    }

    @include e(label) {
        @include type-style(subtitle-1);

        will-change: font-size, color, transform;
        transition: all $transition-timing;
        pointer-events: none;
    }

    @include e(input) {
        @include type-style(subtitle-1);
    }

    @include e(textarea) {
        @include type-style(subtitle-1);
    }

    @include m(filled) {
        @include e(label) {
            @include type-style(caption);
        }
    }

    @include m(focused) {
        @include e(label) {
            @include type-style(caption);
        }
    }

    @include m(placeholder) {
        @include e(label) {
            @include type-style(caption);
        }
    }

    .igx-input-group__bundle-start:not(:empty) + .igx-input-group__upload {
        padding-inline-start: rem(4px);
    }
}
