@use '../../base' as *;
@use '../../themes/schemas' as *;
@use '../../typography/base' as *;
@use 'sass:map';
@use 'sass:meta';

////
/// @group themes
/// @access public
/// @author <a href="https://github.com/simeonoff" target="_blank">Simeon Simeonoff</a> //

/// @param {Map} $palette [null] - The palette used as basis for styling the component.
/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.
/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.  /
/// @param {Color} $idle-text-color [null] - The input text color in the idle state.
/// @param {Color} $filled-text-color [null] - The input text color in the filled state.
/// @param {Color} $focused-text-color [null] - The input text color in the focused state.
/// @param {Color} $disabled-text-color [null] - The input text color in the disabled state.
///
/// @param {Color} $input-prefix-color [null] - The input prefix color in the idle state.
/// @param {Color} $input-prefix-background [null] - The background color of an input prefix in the idle state.
/// @param {Color} $input-suffix-color [null] - The input suffix color in the idle state.
/// @param {Color} $input-suffix-background [null] - The background color of an input sufix in the idle state.
///
/// @param {Color} $idle-secondary-color [null] - The label color in the idle state.
/// @param {Color} $filled-secondary-color [null] - The label color in the filled state.
/// @param {Color} $focused-secondary-color [null] - The label color in the focused state.
///
/// @param {Color} $idle-bottom-line-color [null] - The bottom line and border colors in the idle state.
/// @param {Color} $hover-bottom-line-color [null] - The bottom line and border colors in the hover state.
/// @param {Color} $focused-bottom-line-color [null] - The bottom line and border colors in the focused state.
/// @param {Color} $interim-bottom-line-color [null] - The bottom line and border colors during the to-focused transition.
/// @param {Color} $disabled-bottom-line-color [null] - The bottom line and border colors in the disabled state.
///
/// @param {Color} $border-color [null] - The border color for input groups of type border and fluent.
/// @param {Color} $hover-border-color [null] - The hover input border for input groups of type border and fluent.
/// @param {Color} $focused-border-color [null] - The focused input border color for input groups of type border and fluent.
/// @param {Color} $disabled-border-color [null] - The disabled border color for input groups of type border and fluent.
///
/// @param {Color} $box-background [null] - The background color of an input group of type box.
/// @param {Color} $box-disabled-background [null] - The background color of an input group of type box in the disabled state.
///
/// @param {Color} $border-background [null] - The background color of an input group of type border.
/// @param {Color} $border-disabled-background [null] - The background color of an input group of type border in the disabled state.
///
/// @param {Color} $search-background [null] - The background color of an input group of type search.
/// @param {Color} $search-disabled-background [null] - The background color of an input group of type search in the disabled state.
///
/// @param {box-shadow} $search-resting-shadow [null] - The shadow color of an input group of type search in its resting state.
/// @param {box-shadow} $search-hover-shadow [null] - The shadow color of an input group of type search in its hover state.
/// @param {box-shadow} $search-disabled-shadow [null] - The shadow color of an input group of type search in its disabled state.
///
/// @param {Color} $success-secondary-color [null] - The success color used in the valid state.
/// @param {Color} $warning-secondary-color [null] - The warning color used in the warning state.
/// @param {Color} $error-secondary-color [null] - The error color used in the error state.
///
/// @param {Color} $success-border-color [null] - The border color for success state for bootstrap input group.
/// @param {Color} $error-border-color [null] - The border color for error state for bootstrap input group.
///
/// @param {border-radius} $box-border-radius [null] - The border radius used for box input.
/// @param {border-radius} $border-border-radius [null] - The border radius used for border input.
/// @param {border-radius} $search-border-radius [null] - The border radius used for search input.
///
/// @param {Color} placeholder-color [null] - The placeholder color of an input group.
/// @param {Color} disabled-placeholder-color [null] - The disabled placeholder color of an input group.
///
/// @requires $default-palette
/// @requires $light-schema
/// @requires apply-palette
/// @requires extend
/// @requires text-contrast
/// @requires elevation
///
/// @example scss Change the focused border and label colors
///   $my-input-group-theme: input-group-theme($focused-secondary-color: pink, $focused-bottom-line-color: pink);
///   // Pass the theme to the input-group component mixin
///   @include input-group($my-input-group-theme);
@function input-group-theme(
    $palette: null,
    $schema: $light-schema,
    $elevations: null,

    $box-border-radius: null,
    $border-border-radius: null,
    $search-border-radius: null,

    $idle-text-color: null,
    $filled-text-color: null,
    $focused-text-color: null,
    $disabled-text-color: null,

    $idle-secondary-color: null,
    $filled-secondary-color: null,
    $focused-secondary-color: null,

    $idle-bottom-line-color: null,
    $hover-bottom-line-color: null,
    $focused-bottom-line-color: null,
    $interim-bottom-line-color: null,
    $disabled-bottom-line-color: null,

    $border-color: null,
    $hover-border-color: null,
    $focused-border-color: null,
    $disabled-border-color: null,

    $box-background: null,
    $box-disabled-background: null,
    $border-background: null,
    $border-disabled-background: null,

    $search-background: null,
    $search-disabled-background: null,

    $search-resting-shadow: null,
    $search-hover-shadow: null,
    $search-disabled-shadow: null,

    $success-secondary-color: null,
    $warning-secondary-color: null,
    $error-secondary-color: null,

    $success-shadow-color: null,
    $error-shadow-color: null,

    $placeholder-color: null,
    $disabled-placeholder-color: null,

    $input-prefix-color: null,
    $input-prefix-background: null,
    $input-suffix-color: null,
    $input-suffix-background: null,

    $label-floated-background: null,
    $label-floated-disabled-background: null
) {
    $name: 'igx-input-group';
    $selector: 'igx-input-group, igx-date-range-start, igx-date-range-end';
    $input-group-schema: ();

    @if map.has-key($schema, $name) {
        $input-group-schema: map.get($schema, $name);
    } @else {
        $input-group-schema: $schema;
    }

    $theme: apply-palette($input-group-schema, $palette);

    $search-resting-elevation: map.get($input-group-schema, 'search-resting-elevation');
    $search-hover-elevation: map.get($input-group-schema, 'search-hover-elevation');
    $search-disabled-elevation: map.get($input-group-schema, 'search-disabled-elevation');

    @if not($placeholder-color) and $box-background {
        $placeholder-color: text-contrast($box-background);
    }

    @if not($placeholder-color) and $search-background {
        $placeholder-color: text-contrast($search-background);
    }

    @if not($search-resting-shadow) {
        $search-resting-shadow: elevation($elevations, $search-resting-elevation);
    }

    @if not($search-hover-shadow) {
        $search-hover-shadow: elevation($elevations, $search-hover-elevation);
    }

    @if not($search-disabled-shadow) {
        $search-disabled-shadow: elevation($elevations, $search-disabled-elevation);
    }

    @return extend($theme, (
        palette: $palette,
        name: $name,
        selector: $selector,

        idle-text-color: $idle-text-color,
        filled-text-color: $filled-text-color,
        focused-text-color: $focused-text-color,
        disabled-text-color: $disabled-text-color,

        box-border-radius: $box-border-radius,
        border-border-radius: $border-border-radius,
        search-border-radius: $search-border-radius,

        idle-secondary-color: $idle-secondary-color,
        filled-secondary-color: $filled-secondary-color,
        focused-secondary-color: $focused-secondary-color,

        idle-bottom-line-color: $idle-bottom-line-color,
        hover-bottom-line-color: $hover-bottom-line-color,
        focused-bottom-line-color: $focused-bottom-line-color,
        interim-bottom-line-color: $interim-bottom-line-color,
        disabled-bottom-line-color: $disabled-bottom-line-color,

        border-color: $border-color,
        hover-border-color: $hover-border-color,
        focused-border-color: $focused-border-color,
        disabled-border-color: $disabled-border-color,

        box-background: $box-background,
        box-disabled-background: $box-disabled-background,

        border-background: $border-background,
        border-disabled-background: $border-disabled-background,

        search-background: $search-background,
        search-disabled-background: $search-disabled-background,

        search-resting-shadow: $search-resting-shadow,
        search-hover-shadow: $search-hover-shadow,
        search-disabled-shadow: $search-disabled-shadow,

        success-secondary-color: $success-secondary-color,
        warning-secondary-color: $warning-secondary-color,
        error-secondary-color: $error-secondary-color,

        success-shadow-color: $success-shadow-color,
        error-shadow-color: $error-shadow-color,

        placeholder-color: $placeholder-color,
        disabled-placeholder-color: $disabled-placeholder-color,

        input-prefix-color: $input-prefix-color,
        input-prefix-background: $input-prefix-background,
        input-suffix-color: $input-suffix-color,
        input-suffix-background: $input-suffix-background,

        label-floated-background: $label-floated-background,
        label-floated-disabled-background: $label-floated-disabled-background,
    ));
}



/// @param {Map} $theme - The theme used to style the component.
/// @requires {mixin} css-vars
/// @requires rem
/// @requires {mixin} ellipsis
/// @requires var-get
@mixin input-group($theme) {
    @include css-vars($theme);

    $palette: map.get($theme, 'palette');

    $transition-timing: .25s $ease-out-cubic;

    $variant: map.get($theme, variant);
    $indigo-theme: $variant == 'indigo-design';

    $required-symbol: '*';
    $required-symbol-margin: 2px;

    // This creates an inverse relationship
    // between the value of the base scale size and
    // the sizing of all inner elements.
    // i.e. the bigger the scale size,
    // the smaller the padding of the inner items.
    $base-scale-size: (
        'comfortable': 16px,
        'cosy': 19px,
        'compact': 22px
    );

    $bootstrap-padding: (
        'comfortable': rem(8px) rem(16px),
        'cosy': rem(6px) rem(12px),
        'compact': rem(4px) rem(8px)
    );

    $bootstrap-font-size: (
        'comfortable': rem(20px),
        'cosy': rem(16px),
        'compact': rem(14px),
    );

    $hint-padding-top: rem(6px, map.get($base-scale-size, 'comfortable'));
    $hint--box-margin: rem(12px, map.get($base-scale-size, 'comfortable'));

    igx-input-group {
        --theme: #{map.get($theme, 'variant')};
    }

    %form-group-display {
        position: relative;
        display: block;
        color: var-get($theme, 'idle-text-color');

        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix;
            outline-style: none;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix;
            outline-style: none;
        }

        input,
        textarea,
        span {
            font: inherit;
            margin: 0;
        }

        input[type='file'] {
            @include hide-default();
        }

        textarea {
            overflow: auto;
        }

        // Don't show the number spinner
        input[type='number']::-webkit-inner-spin-button {
            -webkit-appearance: none;
            height: auto;
        }

        input[type='search']::-webkit-search-cancel-button,
        input[type='search']::-webkit-search-decoration {
            -webkit-appearance: none;
        }
    }

    %form-group-display--cosy {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--cosy;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--cosy;
        }
    }

    %form-group-display--compact {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--compact;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--compact;
        }
    }

    %form-group-display--no-margin {
        margin-top: 0;

        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--box;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--box;
        }
    }

    %form-group-display--no-margin-cosy {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--box-cosy;
        }
    }

    %form-group-display--no-margin-compact {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--box-compact;
        }
    }

    %form-group-display--error {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--error;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--error;
        }
    }

    %form-group-box-wrapper {
        border-radius: border-radius(var-get($theme, 'box-border-radius'));
        @if $variant == 'material' {
            border-end-start-radius: border-radius(rem(0));
            border-end-end-radius: border-radius(rem(0));
        }
        overflow: hidden;
    }

    %form-group-display--hover {
        cursor: pointer;
    }

    %form-group-display--disabled {
        user-select: none;
        color: var-get($theme, 'disabled-text-color') !important;

        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--disabled;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--disabled;
        }
    }

    %form-group-bundle {
        position: relative;
        display: flex;
        align-items: center;
        flex-flow: row nowrap;
        max-width: 100%;
        padding-top: rem(18px, map.get($base-scale-size, 'comfortable'));
        box-shadow: inset 0 -1px 0 0 var-get($theme, 'idle-bottom-line-color');
        transition: box-shadow $transition-timing, color $transition-timing;
    }

    %form-group-bundle--cosy {
        padding-top: rem(18px, map.get($base-scale-size, 'cosy'));
    }

    %form-group-bundle--compact {
        padding-top: rem(18px, map.get($base-scale-size, 'compact'));
    }

    %form-group-bundle--box {
        padding: 0;
        padding-inline-start: rem(16px, map.get($base-scale-size, 'comfortable'));
        background: var-get($theme, 'box-background');
        box-shadow: inset 0 -2px 0 0 var-get($theme, 'idle-bottom-line-color');

        igx-suffix,
        [igxSuffix] {
            padding-inline-end: rem(16px, map.get($base-scale-size, 'comfortable'));
        }
    }

    %form-group-bundle--indigo {
        padding: 0;
        padding-inline-start: rem(16px, map.get($base-scale-size, 'comfortable'));
        background: transparent;
        transition: background $transition-timing, box-shadow $transition-timing;
        box-shadow: inset 0 -1px 0 0 var-get($theme, 'idle-bottom-line-color');

        &:hover,
        &:focus {
            background: var-get($theme, 'box-background');
        }

        igx-suffix,
        [igxSuffix] {
            padding-inline-end: rem(16px, map.get($base-scale-size, 'comfortable'));
        }
    }

    %indigo--box-focused {
        background: var-get($theme, 'box-background');
    }

    %form-group-bundle-success--indigo {
        box-shadow: inset 0 -2px 0 0 var-get($theme, 'success-secondary-color');
    }

    %form-group-bundle-error--indigo {
        box-shadow: inset 0 -2px 0 0 var-get($theme, 'error-secondary-color');
    }

    %form-group-bundle-error--indigo--hover {
        border-color: var-get($theme, 'error-secondary-color');
        box-shadow: 0 0 0 1px var-get($theme, 'error-secondary-color');
    }

    %form-group-helper--indigo--disabled {
        color: var-get($theme, 'disabled-text-color');
    }

    %form-group-bundle--box-cosy {
        padding: 0;
        padding-inline-start: rem(16px, map.get($base-scale-size, 'cosy'));

        igx-suffix,
        [igxSuffix] {
            padding-inline-end: rem(16px, map.get($base-scale-size, 'cosy'));
        }
    }

    %form-group-bundle--box-compact {
        padding: 0;
        padding-inline-start: rem(16px, map.get($base-scale-size, 'compact'));

        igx-suffix,
        [igxSuffix] {
            padding-inline-end: rem(16px, map.get($base-scale-size, 'compact'));
        }
    }

    %form-group-bundle--hover {
        cursor: pointer;
        @if not $indigo-theme {
            box-shadow: inset 0 -2px 0 0 var-get($theme, 'hover-bottom-line-color');
        } @else {
            box-shadow: inset 0 -1px 0 0 var-get($theme, 'hover-bottom-line-color');
        }
    }

    %form-group-bundle--focus {
        caret-color: var-get($theme, 'focused-secondary-color');
        @if not $indigo-theme {
            box-shadow: inset 0 -2px 0 0 var-get($theme, 'interim-bottom-line-color');
        } @else {
            box-shadow: inset 0 -2px 0 0 var-get($theme, 'focused-bottom-line-color');
        }
    }

    %form-group-bundle--success {
        caret-color: var-get($theme, 'success-secondary-color');
        box-shadow: inset 0 -1px 0 0 var-get($theme, 'success-secondary-color');
    }

    %form-group-bundle--error {
        caret-color: var-get($theme, 'error-secondary-color');
        box-shadow: inset 0 -1px 0 0 var-get($theme, 'error-secondary-color');
    }

    %form-group-bundle--disabled {
        @if not $indigo-theme {
            box-shadow: none;
        } @else {
            box-shadow: inset 0 -1px 0 0 var-get($theme, 'disabled-bottom-line-color');
        }
        background-image: linear-gradient(to left, var-get($theme, 'disabled-bottom-line-color') 40%, transparent 10%);
        background-position: bottom;
        background-size: 4px 1px;
        background-repeat: repeat-x;

        [dir='rtl'] & {
            background-image: linear-gradient(to right, var-get($theme, 'disabled-bottom-line-color') 40%, transparent 10%);
        }
    }

    %form-group-bundle--box-disabled {
        @if not $indigo-theme {
            background: var-get($theme, 'box-disabled-background');
        } @else {
            background: transparent;
        }
    }

    %form-group-bundle--border {
        padding: 0;
        padding-inline-start: rem(16px, map.get($base-scale-size, 'comfortable'));
        box-shadow: inset 0 0 0 1px var-get($theme, 'border-color');
        border-radius: border-radius(var-get($theme, 'border-border-radius'));
        background: var-get($theme, 'border-background');

        igx-suffix,
        [igxSuffix] {
            padding-inline-end: rem(16px, map.get($base-scale-size, 'comfortable'));
        }
    }

    %form-group-bundle--border-cosy {
        padding: 0;
        padding-inline-start: rem(16px, map.get($base-scale-size, 'cosy'));

        igx-suffix,
        [igxSuffix] {
            padding-inline-end: rem(16px, map.get($base-scale-size, 'cosy'));
        }
    }

    %form-group-bundle--border-compact {
        padding: 0;
        padding-inline-start: rem(16px, map.get($base-scale-size, 'compact'));

        igx-suffix,
        [igxSuffix] {
            padding-inline-end: rem(16px, map.get($base-scale-size, 'compact'));
        }
    }

    %form-group-bundle-border--hover {
        @if not $indigo-theme {
            box-shadow: inset 0 0 0 2px var-get($theme, 'hover-border-color');
        } @else {
            box-shadow: inset 0 0 0 1px var-get($theme, 'hover-border-color');
        }
    }

    %form-group-bundle-border--focus {
        @if not $indigo-theme {
            box-shadow: inset 0 0 0 2px var-get($theme, 'focused-border-color');
        } @else {
            box-shadow: inset 0 0 0 1px var-get($theme, 'focused-border-color');
        }
    }

    %form-group-bundle-border--error {
        @if not $indigo-theme {
            box-shadow: inset 0 0 0 2px var-get($theme, 'error-secondary-color');
        } @else {
            box-shadow: inset 0 0 0 1px var-get($theme, 'error-secondary-color');
        }
    }

    %form-group-bundle-border--success {
        @if not $indigo-theme {
            box-shadow: inset 0 0 0 2px var-get($theme, 'success-secondary-color');
        } @else {
            box-shadow: inset 0 0 0 1px var-get($theme, 'success-secondary-color');
        }
    }

    %form-group-bundle-border--disabled {
        background: var-get($theme, 'border-disabled-background');
        box-shadow: inset 0 0 0 1px var-get($theme, 'disabled-border-color');
    }

    // FLUENT START
    %igx-input-group-fluent {
        display: flex;
        flex-direction: column;

        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix-fluent;
            outline-style: none;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix-fluent;
            outline-style: none;
        }

        select {
            width: calc(100% + #{rem(8px)});
            margin-inline-start: rem(-8px) !important;
            cursor: pointer !important;
        }
    }

    %igx-input-group-fluent-search {
        display: flex;
        flex-direction: column;

        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix-fluent-search;
            outline-style: none;
            overflow: hidden;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix-fluent-search;
            outline-style: none;
        }
    }

    %igx-input-group-fluent-search--focused {
        igx-prefix,
        [igxPrefix] {
            visibility: hidden;
            width: 0;
            padding-inline-start: 0 !important;
        }
    }

    %igx-input-group-fluent--cosy {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix-fluent--cosy;
            outline-style: none;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix-fluent--cosy;
            outline-style: none;
        }
    }

    %igx-input-group-fluent-search--cosy {
        display: flex;
        flex-direction: column;

        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix-fluent-search--cosy;
            outline-style: none;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix-fluent-search--cosy;
            outline-style: none;
        }
    }

    %igx-input-group-fluent--compact {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix-fluent--compact;
            outline-style: none;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix-fluent--compact;
            outline-style: none;
        }
    }

    %igx-input-group-fluent-search--compact {
        display: flex;
        flex-direction: column;

        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix-fluent-search--compact;
            outline-style: none;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix-fluent-search--compact;
            outline-style: none;
        }
    }

    %form-group-bundle-required--fluent {
        &::before {
            content: '*';
            position: absolute;
            top: rem(-8px);
            inset-inline-start: calc(100% + #{rem(4px)});
            color: var-get($theme, 'error-secondary-color');
        }
    }

    %fluent-label + %form-group-bundle-required--fluent {
        &::before {
            display: none;
        }
    }

    // Bundle
    %form-group-bundle--fluent {
        padding: 0;
        min-height: 32px;
        border: 1px solid var-get($theme, 'border-color');
        border-radius: border-radius(var-get($theme, 'border-border-radius'));
        background: var-get($theme, 'border-background');
        position: relative;
        align-items: stretch;
        box-shadow: none !important;
    }

    %form-group-bundle--fluent--hover {
        border-color: var-get($theme, 'hover-border-color');
        box-shadow: none;
    }

    %form-group-bundle--fluent--focus {
        caret-color: var-get($theme, 'focused-text-color');
        border-color: var-get($theme, 'focused-border-color');

        &::after {
            pointer-events: none;
            position: absolute;
            content: '';
            width: 100%;
            height: 100%;
            border: rem(1px) solid var-get($theme, 'focused-border-color');
        }
    }

    %form-group-bundle--fluent--hover-disabled,
    %form-group-bundle--fluent-disabled {
        border-color: var-get($theme, 'disabled-border-color');
        background: var-get($theme, 'border-disabled-background');
    }

    %form-group-bundle-error--fluent,
    %form-group-bundle-error--fluent--hover,
    %form-group-bundle-error--fluent--focus {
        border-color: var-get($theme, 'error-secondary-color');
    }

    %form-group-bundle-success--fluent,
    %form-group-bundle-success--fluent--hover,
    %form-group-bundle-success--fluent--focus {
        border-color: var-get($theme, 'success-secondary-color');
    }

    %form-group-bundle-success--fluent--focus {
        &::after {
            border: rem(1px) solid var-get($theme, 'success-secondary-color');
        }
    }

    %form-group-bundle-error--fluent--focus {
        &::after {
            border: rem(1px) solid var-get($theme, 'error-secondary-color');
        }
    }

    %fluent-input {
        padding: 0;
        margin: 0;
        border: none;
    }

    %fluent-input-disabled {
        color: var-get($theme, 'disabled-text-color');
    }

    %form-group-bundle-main--fluent {
        padding-inline-start: rem(8px);
        align-self: center;
        cursor: default;
    }

    igx-prefix + %form-group-bundle-main--fluent,
    [igx-prefix] + %form-group-bundle-main--fluent {
        @if $variant != 'fluent' {
            padding-inline-start: 0;
        }
    }

    %fluent-placeholder-label {
        transform: translateY(0) scale(1);
    }

    %fluent-label {
        padding: rem(5px) 0;
        font-size: rem(14px, 16px);
        font-weight: 600;
        line-height: normal !important;
        position: static;
        transform: translateY(0);
        transform-origin: top left;
        margin-top: 0 !important;
        height: auto;
        color: color(map.get($theme, 'palette'), 'grays', 800);

        [dir='rtl'] & {
            transform-origin: top right;
        }
    }

    %fluent-label-success {
        color: var-get($theme, 'idle-text-color');
    }

    %fluent-label-error {
        color: var-get($theme, 'idle-text-color');
    }

    %fluent-label-disabled {
        color: color(map.get($theme, 'palette'), 'grays', 500);
    }

    %fluent-label-filled {
        transform: translateY(0);
    }

    %fluent-label-focused {
        color: color(map.get($theme, 'palette'), 'grays', 800);
        transform: translateY(0) scale(1);
    }

    %fluent-textarea {
        padding: 0;
    }

    %form-group-bundle--search {
        padding: 0 rem(16px, map.get($base-scale-size, 'comfortable'));
        border-radius: border-radius(var-get($theme, 'search-border-radius'));
        background: var-get($theme, 'search-background');
        box-shadow: var-get($theme, 'search-resting-shadow');
    }

    %form-group-bundle--search-cosy {
        padding: 0 rem(16px, map.get($base-scale-size, 'cosy'));
    }

    %form-group-bundle--search-compact {
        padding: 0 rem(16px, map.get($base-scale-size, 'compact'));
    }

    %form-group-bundle-search--hover {
        box-shadow: var-get($theme, 'search-hover-shadow');
        border-color: var-get($theme, 'hover-border-color');
    }

    %form-group-bundle-search--focus {
        box-shadow: var-get($theme, 'search-hover-shadow');
        border-color: var-get($theme, 'hover-border-color');
    }

    %form-group-bundle-search--error {
        box-shadow: var-get($theme, 'search-hover-shadow');
        border-color: var-get($theme, 'search-hover-shadow');
    }

    %form-group-bundle-search--success {
        box-shadow: var-get($theme, 'search-hover-shadow');
        border-color: var-get($theme, 'search-hover-shadow');
    }

    %form-group-bundle-search--disabled {
        background: var-get($theme, 'search-disabled-background');
        box-shadow: var-get($theme, 'search-disabled-shadow');
        border-color: var-get($theme, 'disabled-border-color');
    }

    %form-group-bundle-main {
        position: relative;
        flex-grow: 1;
        max-width: inherit;
    }

    %form-group-bundle-main--box {
        padding-top: rem(18px, map.get($base-scale-size, 'comfortable'));
    }

    %form-group-bundle-main--box-cosy {
        padding-top: rem(18px, map.get($base-scale-size, 'cosy'));
    }

    %form-group-bundle-main--box-compact {
        padding-top: rem(18px, map.get($base-scale-size, 'compact'));
    }

    %form-group-label {
        @include ellipsis();
        position: absolute;
        // width: 100%;
        transform: translateY(50%); /* 8px, base is 16px */
        line-height: 1 !important;
        height: rem(18px);
        backface-visibility: hidden;
        will-change: transform;
        transform-origin: top left;
        transition: transform $transition-timing, color $transition-timing, margin $transition-timing;

        [dir='rtl'] & {
            transform-origin: top right;
        }
    }

    %form-group-label--cosy {
        margin-top: rem(-2px);
    }

    %form-group-label--compact {
        margin-top: rem(-4px);
    }

    %form-group-label--box {
        transform: translateY(0);

        + %form-group-input--box,
        ~ %form-group-file-input--box {
            transform: translateY(0);
        }
    }

    %form-group-label--border {
        padding: 0 rem(4px);
        transition: all $transition-timing;
    }

    %form-group-label--border,
    %form-group-label--search {
        transform: translateY(0);
    }

    %form-group-label--search {
        + %form-group-input--search {
            transform: translateY(0);
        }
    }

    %form-group-label--float {
        overflow: visible;
        transform: translateY(-50%) scale(.75);
        margin-top: auto;
    }

    %form-group-label--float-border {
        // width: auto;
        transform: translateY(-130%) scale(.75);
        background: var-get($theme, 'label-floated-background', inherit);
    }

    %form-group-label--float-border-disabled {
        background: var-get($theme, 'label-floated-disabled-background', inherit);
    }

    %form-group-label--float-border-cosy {
        transform: translateY(-115%) scale(.75);
    }

    %form-group-label--float-border-compact {
        transform: translateY(-105%) scale(.75);
    }

    %form-group-label--fixed {
        transition: color $transition-timing;
    }

    %form-group-label--focus {
        color: var-get($theme, 'focused-secondary-color');
    }

    %form-group-label--success {
        color: var-get($theme, 'success-secondary-color');
    }

    %form-group-label--error {
        color: var-get($theme, 'error-secondary-color');
    }

    %form-group-label--required {
        &::after {
            content: '#{$required-symbol}';
            font-size: inherit;
            vertical-align: top;
            margin-inline-start: $required-symbol-margin; /* 2px base is 16px */
            display: inline-block;
        }
    }

    %form-group-input {
        position: relative;
        display: block;
        border: none;
        height: rem(32px, map.get($base-scale-size, 'comfortable'));
        width: 100%;
        min-width: 0;
        overflow: visible;
        background: transparent;
        color: var-get($theme, 'filled-text-color');
        outline-style: none;
        box-shadow: none;
        border-top: rem(3px) solid transparent;
        padding-bottom: rem(3px);

        &:not([type='date']) {
            line-height: 0 !important; /* Reset typography */
        }

        &::-webkit-input-placeholder {
            line-height: normal;
        }

        &::placeholder {
            color: var-get($theme, 'placeholder-color');
            opacity: 1;
            line-height: normal; /* Fix placeholder position in Safari */
        }
    }

    %form-group-file-input {
        position: relative;
        width: 100%;
        max-width: 100%;
        overflow: hidden;
        height: rem(32px, map.get($base-scale-size, 'comfortable'));
        color: var-get($theme, 'filled-text-color');
        line-height: 1;

        span {
            @include ellipsis();
            position: absolute;
            display: inline-block;
            width: inherit;
            max-width: inherit;
            top: 50%;
            transform: translateY(-50%);
        }
    }

    %form-group-input--cosy {
        height: rem(32px, map.get($base-scale-size, 'cosy'));
    }

    %form-group-file-input--cosy {
        height: rem(32px, map.get($base-scale-size, 'cosy'));
    }

    %form-group-input--compact {
        font-size: rem(map.get($base-scale-size, 'compact') - 1px, map.get($base-scale-size, 'compact'));
        height: rem(32px, map.get($base-scale-size, 'compact'));
    }

    %form-group-file-input--compact {
        height: rem(32px, map.get($base-scale-size, 'compact'));
    }

    %form-group-upload-button {
        margin-bottom: rem(10px);
    }

    %form-group-clear-icon {
        &:focus {
            border-radius: border-radius(rem(4px));
            background-color: color($palette, 'primary', 500);
            color: contrast-color($palette, 'primary', 500);

            @if $variant == 'material' {
                background-color: transparent;
                color: color($palette, 'secondary', 500);
            }

            @if $variant == 'fluent' {
                border-radius: 0;
            }

            @if $variant == 'bootstrap' {
                border-radius: 0;
                color: contrast-color($palette, 'primary', 600);
            }
        }
    }

    %chrome-autofill-fix {
        &:-webkit-autofill,
        &:-webkit-autofill:hover,
        &:-webkit-autofill:focus,
        &:-webkit-autofill:active {
            -webkit-transition-delay: 99999s;
            transition-delay: 99999s;
        }
    }

    %edge-clear-icon-fix {
        &::-ms-clear {
            display: none;
        }
    }

    %form-group-input--box,
    %form-group-file-input--box,
    %form-group-input--search,
    %form-group-input--border,
    %form-group-input--indigo,
    %form-group-file-input-indigo {
        transform: translateY(-25%);
    }

    %form-group-input--hover {
        cursor: pointer;
    }

    %form-group-input--focus {
        cursor: text;
        color: var-get($theme, 'focused-text-color');
    }

    %form-group-input--disabled {
        color: var-get($theme, 'disabled-text-color') !important;

        &::placeholder {
            color: var-get($theme, 'disabled-placeholder-color');
        }
    }

    %form-group-textarea {
        // 3 lines * 22px + 8px bottom padding + 8px top padding
        min-height: rem(82px, map.get($base-scale-size, 'comfortable'));

        // this fixes resizing in chrome !?!?
        margin-inline-end: -#{rem(16px, map.get($base-scale-size, 'comfortable'))};

        height: auto;
        resize: vertical;
        overflow: hidden;

        // resets typography styles
        line-height: normal !important;

        &:not([type='*']) {
            line-height: normal !important; /* resets typography styles */
        }
    }

    %form-group-textarea--disabled {
        color: var-get($theme, 'disabled-text-color') !important;

        &::placeholder {
            color: var-get($theme, 'disabled-placeholder-color');
        }
    }

    %form-group-textarea--cosy {
        min-height: rem(82px, map.get($base-scale-size, 'cosy'));
        margin-inline-end: -#{rem(16px, map.get($base-scale-size, 'cosy'))};
    }

    %form-group-textarea--compact {
        min-height: rem(82px, map.get($base-scale-size, 'compact'));
        margin-inline-end: -#{rem(16px, map.get($base-scale-size, 'compact'))};
    }

    %form-group-textarea--indigo {
        margin-top: -#{rem(18px, map.get($base-scale-size, 'comfortable'))} !important;
    }

    %form-group-textarea--indigo-cosy {
        margin-top: -#{rem(18px, map.get($base-scale-size, 'cosy'))} !important;
    }

    %form-group-textarea--indigo-compact {
        margin-top: -#{rem(18px, map.get($base-scale-size, 'compact'))} !important;
    }

    %form-group-prefix,
    %form-group-suffix {
        position: relative;
        display: inline-flex;
        align-items: center;
        height: rem(32px, map.get($base-scale-size, 'comfortable'));
        transition: color $transition-timing;
    }

    %form-group-prefix {
        padding: rem(8px, map.get($base-scale-size, 'comfortable'));
        padding-inline-start: 0;
    }

    %form-group-suffix {
        padding: rem(8px, map.get($base-scale-size, 'comfortable')) 0;
    }

    %form-group-prefix--cosy,
    %form-group-suffix--cosy {
        height: rem(32px, map.get($base-scale-size, 'cosy'));
    }

    %form-group-prefix--compact,
    %form-group-suffix--compact {
        font-size: rem(map.get($base-scale-size, 'compact') - 1px, map.get($base-scale-size, 'compact'));
        height: rem(32px, map.get($base-scale-size, 'compact'));
    }

    %form-group-prefix--cosy {
        padding: rem(8px, map.get($base-scale-size, 'cosy'));
        padding-inline-start: 0;
    }

    %form-group-prefix--compact {
        padding: rem(8px, map.get($base-scale-size, 'compact'));
        padding-inline-start: 0;
    }

    %form-group-suffix--cosy {
        padding: rem(8px, map.get($base-scale-size, 'cosy')) 0;
    }

    %form-group-suffix--compact {
        padding: rem(8px, map.get($base-scale-size, 'compact')) 0;
    }

    igx-prefix.igx-prefix--upload,
    [igxPrefix].igx-prefix--upload {
        padding: 0 !important;
    }

    %form-group-prefix-fluent {
        color: var-get($theme, 'input-prefix-color');
        background: var-get($theme, 'input-prefix-background');
        padding: 0 rem(8px, map.get($base-scale-size, 'comfortable'));
        width: auto;
        height: auto;
        line-height: normal;
        font-weight: 400;
        border-radius: border-radius(var-get($theme, 'border-border-radius')) 0 0 border-radius(var-get($theme, 'border-border-radius'));

        &:last-of-type {
            margin-inline-end: rem(8px);
        }
    }

    %form-group-prefix-fluent-search {
        padding: 0 rem(8px, map.get($base-scale-size, 'comfortable'));

        &:last-of-type {
            margin-inline-end: 0;
        }
    }

    %form-group-suffix-fluent {
        color: var-get($theme, 'input-suffix-color');
        padding: 0 rem(8px, map.get($base-scale-size, 'comfortable'));
        background: var-get($theme, 'input-suffix-background');
        width: auto;
        height: auto;
        line-height: normal;
        border-radius: 0 border-radius(var-get($theme, 'border-border-radius')) border-radius(var-get($theme, 'border-border-radius')) 0;

        &:first-of-type {
            margin-inline-start: rem(8px);
        }
    }

    %form-group-suffix-fluent-search {
        width: auto;
        height: auto;
        padding: 0 rem(8px, map.get($base-scale-size, 'comfortable'));
        line-height: normal;

        &:first-of-type {
            margin-inline-start: 0;
        }
    }

    %form-group-prefix-fluent,
    %form-group-suffix-fluent,
    %form-group-suffix-fluent-search,
    %form-group-prefix-fluent-search {
        igx-icon {
            width: var(--igx-icon-size, #{rem(18px)});
            height: var(--igx-icon-size, #{rem(18px)});
            font-size: var(--igx-icon-size, #{rem(18px)});
        }
    }

    %form-group-prefix-fluent,
    %form-group-suffix-fluent {
        .igx-typography [igx-button],
        .igx-typography igx-button,
        .igx-typography button,
        button {
            border-radius: rem(1px) 0 0 rem(1px);
        }
    }

    %form-group-prefix-fluent-search--cosy,
    %form-group-suffix-fluent-search--cosy,
    %form-group-prefix-fluent--cosy,
    %form-group-suffix-fluent--cosy {
        height: auto;
        line-height: normal;
    }

    %form-group-prefix-fluent-search--compact,
    %form-group-suffix-fluent-search--compact,
    %form-group-prefix-fluent--compact,
    %form-group-suffix-fluent--compact {
        font-size: rem(map.get($base-scale-size, 'compact') - 1px, map.get($base-scale-size, 'compact'));
        height: auto;
        line-height: normal;
    }

    %form-group-prefix-fluent-search--cosy,
    %form-group-prefix-fluent--cosy {
        padding: 0 rem(8px, map.get($base-scale-size, 'cosy'));
    }

    %form-group-prefix-fluent-search--compact,
    %form-group-prefix-fluent--compact {
        padding: 0 rem(8px, map.get($base-scale-size, 'compact'));
    }

    %form-group-suffix-fluent-search--cosy,
    %form-group-suffix-fluent--cosy {
        padding: 0 rem(8px, map.get($base-scale-size, 'cosy'));
    }

    %form-group-suffix-fluent-search--compact,
    %form-group-suffix-fluent--compact {
        padding: 0 rem(8px, map.get($base-scale-size, 'compact'));
    }
    // FLUENT END

    %form-group-prefix--box {
        padding: 0;
        padding-inline-end: rem(8px, map.get($base-scale-size, 'comfortable'));
    }

    %form-group-prefix--box-cosy {
        padding: 0;
        padding-inline-end: rem(8px, map.get($base-scale-size, 'cosy'));
    }

    %form-group-prefix--box-compact {
        padding: 0;
        padding-inline-end: rem(8px, map.get($base-scale-size, 'compact'));
    }

    %form-group-suffix--box {
        padding: 0;
    }

    %form-group-prefix--error,
    %form-group-suffix--error {
        color: var-get($theme, 'error-secondary-color');
    }

    %form-group-border {
        height: 2px; /* 2px, when base is 16px */
        margin-top: -2px; /* 2px, when base is 16px */
        transform: scaleX(0);
        transform-origin: center;
        background: var-get($theme, 'focused-secondary-color');
    }

    %form-group-border--focus {
        transform: scaleX(1);
        transition: transform $transition-timing;
    }

    %form-group-border--success {
        background: var-get($theme, 'success-secondary-color');
    }

    %form-group-border--warning {
        background: var-get($theme, 'warning-secondary-color');
    }

    %form-group-border--error {
        background: var-get($theme, 'error-secondary-color');
    }

    %form-group-border--hidden {
        display: none;
    }

    %form-group-helper {
        position: relative;
        display: flex;
        padding-top: rem(6px, map.get($base-scale-size, 'comfortable'));
        justify-content: space-between;

        > * {
            margin-inline-end: rem(8px);

            &:last-child {
                margin-inline-end: 0;
            }
        }

        &:empty {
            display: none;
        }
    }

    %form-group-help--cosy {
        padding-top: rem(6px, map.get($base-scale-size, 'cosy'));
    }

    %form-group-help--compact {
        padding-top: rem(6px, map.get($base-scale-size, 'compact'));
    }

    %form-group-helper--box {
        margin-inline-start: $hint--box-margin; /* 16px, base is 12px */
        margin-inline-end: $hint--box-margin; /* 16px, base is 12px */
    }

    %form-group-helper--success {
        color: var-get($theme, 'success-secondary-color');
    }

    %form-group-helper--error {
        color: var-get($theme, 'error-secondary-color');
    }

    %form-group-helper-item {
        display: flex;
        align-items: center;
        position: relative;
    }

    %form-group-helper-item--start {
        justify-content: flex-start;
    }

    %form-group-helper-item--end {
        justify-content: flex-end;
    }

    %form-group-helper-item--start,
    %form-group-helper-item--end {
        width: 100%;
    }

    %form-group-prefix--disabled,
    %form-group-suffix--disabled {
        color: var-get($theme, 'disabled-text-color');
    }

    // Bootstrap
    %form-group-display--bootstrap {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--bootstrap;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--bootstrap;
        }

        %form-group-prefix--bootstrap:first-child {
            border-start-start-radius: border-radius(var-get($theme, 'box-border-radius'));
            border-end-start-radius: border-radius(var-get($theme, 'box-border-radius'));
        }

        %form-group-suffix--bootstrap:last-child {
            border-start-end-radius: border-radius(var-get($theme, 'box-border-radius'));
            border-end-end-radius: border-radius(var-get($theme, 'box-border-radius'));
        }

        %bootstrap-input:not(:first-child),
        %bootstrap-file-input:not(:first-child) {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }

        %bootstrap-input:not(:last-child),
        %bootstrap-file-input:not(:last-child) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
        }
    }

    %form-group-display--cosy-bootstrap {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--cosy-bootstrap;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--cosy-bootstrap;
        }
    }

    %form-group-display--compact-bootstrap {
        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--compact-bootstrap;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--compact-bootstrap;
        }
    }

    %form-group-display--disabled-bootstrap {
        background-image: none;

        igx-prefix,
        [igxPrefix] {
            @extend %form-group-prefix--disabled-bootstrap;
        }

        igx-suffix,
        [igxSuffix] {
            @extend %form-group-suffix--disabled-bootstrap;
        }
    }

    %form-group-bundle--bootstrap {
        align-items: stretch;
        padding: 0;
        box-shadow: none;
        z-index: 0;
    }

    %form-group-bundle--bootstrap-hover {
        border: none;
        box-shadow: none;
    }

    %form-group-prefix--bootstrap,
    %form-group-suffix--bootstrap {
        border: 1px solid var-get($theme, 'border-color');
        padding: map.get($bootstrap-padding, 'comfortable');
        z-index: -1;
        width: auto;
        height: auto;
        font-size: map.get($bootstrap-font-size, 'comfortable');
        line-height: 1.5;
        white-space: nowrap;

        igx-icon {
            width: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'comfortable')});
            height: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'comfortable')});
            font-size: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'comfortable')});
            font-weight: 400;
        }
    }

    %form-group-prefix--bootstrap {
        color: var-get($theme, 'input-prefix-color');
        background: var-get($theme, 'input-prefix-background');
        border-inline-end: 0;
    }

    %form-group-suffix--bootstrap {
        color: var-get($theme, 'input-suffix-color');
        background: var-get($theme, 'input-suffix-background');
        border-inline-start: 0;
    }

    %form-group-prefix--disabled-bootstrap,
    %form-group-suffix--disabled-bootstrap {
        border: 1px solid var-get($theme, 'disabled-border-color');
        color: var-get($theme, 'disabled-text-color');
    }

    %form-group-prefix--cosy-bootstrap,
    %form-group-suffix--cosy-bootstrap {
        padding: map.get($bootstrap-padding, 'cosy');
        width: auto;
        height: auto;

        igx-icon {
            width: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'cosy')});
            height: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'cosy')});
            font-size: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'cosy')});
        }
    }

    %form-group-prefix--compact-bootstrap,
    %form-group-suffix--compact-bootstrap {
        padding: map.get($bootstrap-padding, 'compact');
        width: auto;
        height: auto;

        igx-icon {
            width: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'compact')});
            height: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'compact')});
            font-size: var(--igx-icon-size, #{map.get($bootstrap-font-size, 'compact')});
        }
    }

    %bootstrap-label {
        position: static;
        display: block;
        color: var-get($theme, 'idle-secondary-color');
        padding: 0;
        line-height: normal !important;
        transform: translateY(0);
        transform-origin: top left;
        margin-top: 0 !important;
        margin-bottom: rem(8px);
        height: auto;
        font-size: rem(16px);

        [dir='rtl'] & {
            transform-origin: top right;
        }
    }

    %bootstrap-label--cosy {
        font-size: rem(14px);
        margin-bottom: rem(6px);
    }

    %bootstrap-label--compact {
        font-size: rem(14px);
        margin-bottom: rem(4px);
    }

    %bootstrap-input {
        height: auto;
        line-height: 1.5 !important;
        margin: 0;
        border-radius: border-radius(var-get($theme, 'box-border-radius'));
        border: 1px solid var-get($theme, 'border-color');
        font-size: map.get($bootstrap-font-size, 'comfortable');
        padding: map.get($bootstrap-padding, 'comfortable');
        transition: box-shadow .15s ease-out, border .15s ease-out;
    }

    %bootstrap-file-input {
        width: calc(100% - #{2 * nth(map.get($bootstrap-padding, 'comfortable'), 2)});
        height: inherit;
        border-radius: border-radius(var-get($theme, 'box-border-radius'));
        border: rem(1px) solid var-get($theme, 'border-color');
        padding: map.get($bootstrap-padding, 'comfortable');
    }

    %bootstrap-input--focus {
        border: rem(1px) solid var-get($theme, 'focused-border-color');
        box-shadow: 0 0 0 rem(4px) var-get($theme, 'focused-secondary-color');
    }

    %bootstrap-input--success {
        border: rem(1px) solid var-get($theme, 'success-secondary-color');
        box-shadow: 0 0 0 rem(4px) var-get($theme, 'success-shadow-color');
    }

    %bootstrap-input--error {
        border: rem(1px) solid var-get($theme, 'error-secondary-color');
        box-shadow: 0 0 0 rem(4px) var-get($theme, 'error-shadow-color');
    }

    %bootstrap-input--disabled {
        background: var-get($theme, 'border-disabled-background');
        border: rem(1px) solid var-get($theme, 'disabled-border-color');
        box-shadow: none;
    }

    %bootstrap-input--search {
        transform: translateY(0);
    }

    %bootstrap-input--cosy {
        font-size: map.get($bootstrap-font-size, 'cosy');
        padding: map.get($bootstrap-padding, 'cosy');
    }

    %bootstrap-input--compact {
        font-size: map.get($bootstrap-font-size, 'compact');
        padding: map.get($bootstrap-padding, 'compact');
    }
}

/// Adds typography styles for the igx-input-group component.
/// Uses the 'body-1', 'caption'
/// category from the typographic scale.
/// @group typography
/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.
/// @param {Map} $categories [(helper-text: 'caption', input-text: 'subtitle-1')] - The categories from the typographic scale used for type styles.
/// @requires {mixin} type-style
@mixin input-group-typography($type-scale, $categories: (
    helper-text: 'caption',
    input-text: 'subtitle-1')
) {
    $helper-text: map.get($categories, 'helper-text');
    $input-text: map.get($categories, 'input-text');
    $input-text-props: type-scale-category($type-scale, $input-text);

    %form-group-input {
        @include type-style($type-scale, $input-text) {
            margin: 0;
        }
    }

    %form-group-helper {
        @include type-style($type-scale, $helper-text) {
            margin: 0;
        }
    }

    %form-group-prefix,
    %form-group-suffix {
        @include type-style($type-scale, $input-text) {
            margin: 0;
        }
    }
}
