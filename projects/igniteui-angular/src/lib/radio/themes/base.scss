@use 'sass:map';
@use 'igniteui-theming/sass/animations' as *;
@use 'igniteui-theming/sass/bem' as *;
@use 'igniteui-theming/sass/themes' as *;
@use 'igniteui-theming/sass/typography' as *;
@use 'igniteui-theming/sass/color/functions' as *;
@use './light/themes' as *;

$theme: $material;

@include scale-in-out($start-scale: .9);

%radio-display {
    position: relative;
    display: inline-flex;
    flex-flow: row nowrap;
    align-items: center;
    color: var-get($theme, 'label-color');
    width: max-content;
    cursor: pointer;
}

%radio-input {
    @include hide-default();
}

%radio-display--disabled {
    pointer-events: none;
    color: var-get($theme, 'disabled-label-color');
    user-select: none;
}

%radio-label--invalid {
    color: var-get($theme, 'error-color');
}

%radio-label--disabled {
    color: var-get($theme, 'disabled-label-color');
}

%radio-composite {
    position: relative;
    display: inline-block;
    width: var(--size);
    height: var(--size);
    min-width: var(--size);
    line-height: var(--size);
    color: var-get($theme, 'label-color');
    user-select: none;

    //ripple color
    --color: #{var-get($theme, 'empty-color')};

    &::before,
    &::after {
        position: absolute;
        content: '';
        width: var(--size);
        height: var(--size);
        inset-inline-start: 0;
        top: 0;
        border-radius: border-radius(50%);
    }

    &::before {
        backface-visibility: hidden;
        z-index: 1;
        transform: scale(0);
        transition: all .2s ease-in;
    }
    
    &::after {
        border: var(--border-width) solid var-get($theme, 'empty-color');
        background: var-get($theme, 'empty-fill-color');
    }
}

%radio-composite--x {
    //ripple color
    --color: #{var-get($theme, 'fill-color')};

    &::before {
        border: var(--border-width) solid var-get($theme, 'fill-color');
        background: var-get($theme, 'fill-color');
        transform: var(--scale);
    }

    &::after {
        border: var(--border-width) solid var-get($theme, 'fill-color');
    }
}

%igx-radio-hover__composite {
    &::before {
        background: var-get($theme, 'hover-color');
    }
}

%igx-radio-hover__composite--invalid {
    &::before {
        background: var-get($theme, 'error-color');
    }

    &::after {
        // should be fixed in indigo theme
        border-color: var-get($theme, 'error-color-hover');
    }
}

%igx-radio--checked-active__composite {
    &::before {
        background: var-get($theme, 'fill-color-hover');
        border-color: var-get($theme, 'fill-hover-border-color');
    }
    
    &::after {
        border-color: var-get($theme, 'fill-hover-border-color');
    }
}

%radio-composite--invalid {
    //ripple color
    --color: #{var-get($theme, 'error-color')};

    &::after {
        border: var(--border-width) solid var-get($theme, 'error-color');
    }
}

%radio-composite--x--invalid {
    &::after {
        border: var(--border-width) solid var-get($theme, 'error-color');
    }
    
    &::before {
        background: var-get($theme, 'error-color');
        border: var(--border-width) solid transparent;
    }
}

%radio-composite--disabled {
    &::after {
        border: var(--border-width) solid var-get($theme, 'disabled-color');
    }
}

%radio-composite--x--disabled {
    &::after {
        border: var(--border-width) solid var-get($theme, 'disabled-fill-color');
    }

    &::before {
        background: var-get($theme, 'disabled-fill-color');
        border: var(--border-width) solid transparent;
    }
}

%radio-label {
    color: var-get($theme, 'label-color');
    user-select: none;
    word-wrap: break-all;

    &:empty {
        display: none;
    }
}

%radio-label--after {
    margin-inline-start: var(--label-margin);
}

%radio-label--before {
    order: -1;
    margin-inline-end: var(--label-margin);
}

%radio-label--before,
%radio-label--after {
    &:empty {
        margin: 0;
    }
}

%radio-ripple {
    --_ripple-size: #{rem(40px)};

    display: none;
    position: absolute;
    top: calc(50% - calc(var(--_ripple-size) / 2));
    inset-inline-start: calc(50% - calc(var(--_ripple-size) / 2));
    width: var(--_ripple-size);
    aspect-ratio: 1;
    // should be moved to the schema file like the switch and checkbox
    border-radius: calc(var(--_ripple-size) / 2);
    overflow: hidden;
    pointer-events: none;
    filter: opacity(1);
}

%igx-radio--focused--invalid--checked {
    %radio-composite {
        &::after {
            border: var(--border-width) solid var-get($theme, 'error-color');
        }

        &::before {
            background: var-get($theme, 'error-color');
            border-color: var-get($theme, 'error-color');
        }
    }
}

%radio-composite--x--invalid--hover {
    &::before {
        background: var-get($theme, 'error-color-hover');
        border-color: var-get($theme, 'error-color-hover');
    }

    &::after {
        border: var(--border-width) solid var-get($theme, 'error-color-hover');
    }
}

%radio-ripple--hover {
    background: var-get($theme, 'empty-color');
    transition: background .2s $ease-out-quad;
    opacity: .06;

    @container style(--ig-theme-variant: dark) {
        opacity: .12;
    }
}

%radio-ripple--hover-checked {
    background: var-get($theme, 'fill-color');
}

%radio-ripple--hover-invalid {
    background: var-get($theme, 'error-color');
}

%radio-ripple--focused {
    background: var-get($theme, 'empty-color');
    transition: background .2s $ease-out-quad;
    opacity: .12;

    @container style(--ig-theme-variant: dark) {
        opacity: .24;
    }
}

%radio-ripple--focused-checked {
    background: var-get($theme, 'fill-color');
}

%radio-ripple--focused-invalid {
    background: var-get($theme, 'error-color');
}

%radio-ripple--pressed {
    opacity: .12;

    @container style(--ig-theme-variant: dark) {
        opacity: .24;
    }
}

%radio-group-display {
    display: block;

    %radio-display:not(:last-of-type) {
        margin-inline-end: var(--horizontal-group-margin);
    }
}

%radio-group-display--vertical {
    display: flex;
    flex-flow: column;

    %radio-display:not(:last-of-type) {
        margin-inline-end: 0;
        margin-block-end: var(--vertical-group-margin);
    }
}

@include b(igx-radio) {
    @include css-vars-from-theme($base, 'igx-radio');
    @extend %radio-display !optional;

    &:hover {
        @include e(composite) {
            @extend %igx-radio-hover__composite !optional;
        }
        @include e(ripple) {
            @extend %radio-ripple--hover !optional;
        }
        @include e(label) {
            @extend %radio-label--hover !optional;
        }
    }

    &:active {
        @include e(composite) {
            @extend %igx-radio-hover__composite !optional;
        }
        @include e(ripple) {
            @extend %radio-ripple--hover !optional;
            @extend %radio-ripple--pressed !optional;
        }
    }
    
    @include e(input) {
        @extend %radio-input !optional;
    }
    
    @include e(composite) {
        @extend %radio-composite !optional;
    }
    
    @include e(label) {
        @extend %radio-label !optional;
        @extend %radio-label--after !optional;
    }
    
    @include e(label, $m: before) {
        @extend %radio-label !optional;
        @extend %radio-label--before !optional;
    }
    
    @include e(ripple) {
        @extend %radio-ripple !optional;
    }
    
    @include m(focused) {
        @extend %igx-radio--focused !optional;
    
        @include e(ripple) {
            @extend %radio-ripple--focused !optional;
        }
    
        &:hover {
            @extend %igx-checkbox--focused-hovered !optional;
    
            @include e(ripple) {
                @extend %radio-ripple--focused !optional;
            }
        }
    }
    
    @include m(checked) {
        @include e(composite) {
            @extend %radio-composite--x !optional;
        }
    
        &:hover {
            @include e(composite) {
                @extend %igx-radio--checked-active__composite !optional;
            }
    
            @include e(ripple) {
                @extend %radio-ripple--hover !optional;
                @extend %radio-ripple--hover-checked !optional;
            }
        }
    
        &:active {
            @include e(composite) {
                @extend %igx-radio--checked-active__composite !optional;
            }
    
            @include e(ripple) {
                @extend %radio-ripple--hover !optional;
                @extend %radio-ripple--hover-checked !optional;
                @extend %radio-ripple--pressed !optional;
            }
        }
    }
    
    @include m(disabled) {
        @extend %radio-display--disabled !optional;
    
        @include e(composite) {
            @extend %radio-composite--disabled !optional;
        }
    
        @include e(label) {
            @extend %radio-label--disabled !optional;
        }
    }
    
    @include m(invalid) {
        @extend %radio-display--invalid !optional;
    
        @include e(composite) {
            @extend %radio-composite--invalid !optional;
        }
    
        @include e(label) {
            @extend %radio-label--invalid !optional;
        }
    
        &:hover {
            @include e(ripple) {
                @extend %radio-ripple--hover !optional;
                @extend %radio-ripple--hover-invalid !optional;
            }
    
            @include e(composite) {
                @extend %igx-radio-hover__composite--invalid !optional;
            }
        }
    
        &:active {
            @include e(composite) {
                @extend %igx-radio-hover__composite--invalid !optional;
            }
    
            @include e(ripple) {
                @extend %radio-ripple--hover !optional;
                @extend %radio-ripple--hover-invalid !optional;
                @extend %radio-ripple--pressed !optional;
            }
        }
    }
    
    @include mx(focused, invalid) {
        @extend %igx-radio--focused--invalid !optional;
    
        @include e(ripple) {
            @extend %radio-ripple--focused !optional;
            @extend %radio-ripple--focused-invalid !optional;
        }
    }
    
    @include mx(focused, checked) {
        @extend %igx-radio--focused-checked !optional;
    
        &:hover {
            @include e(composite) {
                @extend %igx-radio--checked-active__composite !optional;
            }
        }
    
        &:active {
            @include e(composite) {
                @extend %igx-radio--checked-active__composite !optional;
            }
        }
    
        @include e(ripple) {
            @extend %radio-ripple--focused !optional;
            @extend %radio-ripple--focused-checked !optional;
        }
    }
    
    @include mx(checked, disabled) {
        @include e(composite) {
            @extend %radio-composite--x--disabled !optional;
        }
    }
    
    @include mx(checked, invalid) {
        @include e(composite) {
            @extend %radio-composite--x--invalid !optional;
        }
    
        &:hover {
            @include e(composite) {
                @extend %radio-composite--x--invalid--hover !optional;
            }
        }
    
        &:active {
            @include e(composite) {
                @extend %radio-composite--x--invalid--hover !optional;
            }
        }
    }
    
    @include mx(checked, invalid, focused) {
        @extend %igx-radio--focused--invalid--checked !optional;
    }
}

@include b(igx-radio-group) {
    @extend %radio-group-display !optional;

    @include m(vertical) {
        @extend %radio-group-display--vertical !optional;
    }
}