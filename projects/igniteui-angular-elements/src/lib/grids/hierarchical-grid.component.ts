
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, CUSTOM_ELEMENTS_SCHEMA, ElementRef, EnvironmentInjector, EventEmitter, Inject, Injector, IterableDiffers, LOCALE_ID, NgZone, Optional, Output, QueryList, ViewContainerRef } from '@angular/core';
import { IgxChildGridRowComponent, IgxHierarchicalGridComponent } from '../../../../igniteui-angular/src/lib/grids/hierarchical-grid/hierarchical-grid.component';
import { IgxGridCRUDService } from '../../../../igniteui-angular/src/lib/grids/common/crud.service';
import { IgxGridValidationService } from '../../../../igniteui-angular/src/lib/grids/grid/grid-validation.service';
import { IgxGridSelectionService } from '../../../../igniteui-angular/src/lib/grids/selection/selection.service';
import { IGX_GRID_BASE, IGX_GRID_SERVICE_BASE, IgxButtonDirective, IgxCircularProgressBarComponent, IgxFlatTransactionFactory, IgxGridForOfDirective, IgxGridHeaderRowComponent, IgxGridTransaction, IgxIconComponent, IgxOverlayOutletDirective, IgxOverlayService, IgxRippleDirective, IgxRowEditTabStopDirective, IgxSnackbarComponent, IgxTemplateOutletDirective, IgxTextHighlightService, IgxToggleDirective, State, Transaction, TransactionService } from 'igniteui-angular';
import { IgxHierarchicalGridAPIService } from '../../../../igniteui-angular/src/lib/grids/hierarchical-grid/hierarchical-grid-api.service';
import { IgxGridSummaryService } from '../../../../igniteui-angular/src/lib/grids/summaries/grid-summary.service';
import { IgxFilteringService } from '../../../../igniteui-angular/src/lib/grids/filtering/grid-filtering.service';
import { IgxHierarchicalGridNavigationService } from '../../../../igniteui-angular/src/lib/grids/hierarchical-grid/hierarchical-grid-navigation.service';
import { IgxColumnResizingService } from '../../../../igniteui-angular/src/lib/grids/resizing/resizing.service';
import { IgxForOfScrollSyncService, IgxForOfSyncService } from '../../../../igniteui-angular/src/lib/directives/for-of/for_of.sync.service';
import { IgxRowIslandAPIService } from '../../../../igniteui-angular/src/lib/grids/hierarchical-grid/row-island-api.service';
import { DOCUMENT, NgClass, NgFor, NgIf, NgStyle, NgTemplateOutlet } from '@angular/common';
import { IgxGridBodyDirective } from '../../../../igniteui-angular/src/lib/grids/grid.common';
import { IgxGridDragSelectDirective } from '../../../../igniteui-angular/src/lib/grids/selection/drag-select.directive';
import { IgxColumnMovingDropDirective } from '../../../../igniteui-angular/src/lib/grids/moving/moving.drop.directive';
import { IgxHierarchicalRowComponent } from '../../../../igniteui-angular/src/lib/grids/hierarchical-grid/hierarchical-row.component';
import { IgxSummaryRowComponent } from '../../../../igniteui-angular/src/lib/grids/summaries/summary-row.component';
import { IgxGridColumnResizerComponent } from '../../../../igniteui-angular/src/lib/grids/resizing/resizer.component';
import { IgxGridFilteringPipe, IgxGridSortingPipe } from '../../../../igniteui-angular/src/lib/grids/grid/grid.pipes';
import { IgxGridAddRowPipe, IgxGridRowClassesPipe, IgxGridRowPinningPipe, IgxGridRowStylesPipe, IgxGridTransactionPipe, IgxHasVisibleColumnsPipe, IgxStringReplacePipe } from '../../../../igniteui-angular/src/lib/grids/common/pipes';
import { IgxSummaryDataPipe } from '../../../../igniteui-angular/src/lib/grids/summaries/grid-root-summary.pipe';
import { IgxGridHierarchicalPagingPipe, IgxGridHierarchicalPipe } from '../../../../igniteui-angular/src/lib/grids/hierarchical-grid/hierarchical-grid.pipes';
import { PlatformUtil } from '../../../../igniteui-angular/src/lib/core/utils';
import { takeUntil } from 'rxjs';
import { IColumnsAutoGeneratedEventArgs } from './events';
import { IgxActionStripToken } from '../../../../igniteui-angular/src/lib/action-strip/token';
import { IgxRowIslandElementsComponent } from './row-island.component';


/* blazorAdditionalDependency: Column */
/* blazorAdditionalDependency: ColumnGroup */
/* blazorAdditionalDependency: ColumnLayout */
/* blazorAdditionalDependency: GridToolbar */
/* blazorAdditionalDependency: GridToolbarActions */
/* blazorAdditionalDependency: GridToolbarTitle */
/* blazorAdditionalDependency: GridToolbarAdvancedFiltering */
/* blazorAdditionalDependency: GridToolbarExporter */
/* blazorAdditionalDependency: GridToolbarHiding */
/* blazorAdditionalDependency: GridToolbarPinning */
/* blazorAdditionalDependency: ActionStrip */
/* blazorAdditionalDependency: GridActionsBaseDirective */
/* blazorAdditionalDependency: GridEditingActions */
/* blazorAdditionalDependency: GridPinningActions */
/* blazorAdditionalDependency: RowIsland */
/* blazorIndirectRender */
/**
 * Hierarchical grid
 *
 * @igxModule IgxHierarchicalGridModule
 *
 */
@Component({
    changeDetection: ChangeDetectionStrategy.OnPush,
    selector: 'igx-hierarchical-grid',
    templateUrl: '../../../../igniteui-angular/src/lib/grids/hierarchical-grid/hierarchical-grid.component.html',
    providers: [
        IgxGridCRUDService,
        IgxGridValidationService,
        IgxGridSelectionService,
        { provide: IGX_GRID_SERVICE_BASE, useClass: IgxHierarchicalGridAPIService },
        { provide: IGX_GRID_BASE, useExisting: IgxHierarchicalGridElementsComponent },
        IgxGridSummaryService,
        IgxFilteringService,
        IgxHierarchicalGridNavigationService,
        IgxColumnResizingService,
        IgxForOfSyncService,
        IgxForOfScrollSyncService,
        IgxRowIslandAPIService
    ],
    imports: [
        NgIf,
        NgClass,
        NgFor,
        NgTemplateOutlet,
        NgStyle,
        IgxGridHeaderRowComponent,
        IgxGridBodyDirective,
        IgxGridDragSelectDirective,
        IgxColumnMovingDropDirective,
        IgxGridForOfDirective,
        IgxTemplateOutletDirective,
        IgxHierarchicalRowComponent,
        IgxOverlayOutletDirective,
        IgxToggleDirective,
        IgxCircularProgressBarComponent,
        IgxSnackbarComponent,
        IgxSummaryRowComponent,
        IgxButtonDirective,
        IgxRippleDirective,
        IgxIconComponent,
        IgxRowEditTabStopDirective,
        IgxGridColumnResizerComponent,
        IgxChildGridRowComponent,
        IgxGridSortingPipe,
        IgxGridFilteringPipe,
        IgxGridTransactionPipe,
        IgxHasVisibleColumnsPipe,
        IgxGridRowPinningPipe,
        IgxGridAddRowPipe,
        IgxGridRowClassesPipe,
        IgxGridRowStylesPipe,
        IgxSummaryDataPipe,
        IgxGridHierarchicalPipe,
        IgxGridHierarchicalPagingPipe,
        IgxStringReplacePipe
    ],
    schemas: [CUSTOM_ELEMENTS_SCHEMA]
})
export class IgxHierarchicalGridElementsComponent extends IgxHierarchicalGridComponent {

    constructor(
        public override readonly validation: IgxGridValidationService,
        /** @hidden @internal */
        public override readonly selectionService: IgxGridSelectionService,
        protected override colResizingService: IgxColumnResizingService,
        @Inject(IGX_GRID_SERVICE_BASE) public override readonly gridAPI: IgxHierarchicalGridAPIService,
        protected override transactionFactory: IgxFlatTransactionFactory,
        private elementRef1: ElementRef<HTMLElement>,
        protected override zone: NgZone,
        /** @hidden @internal */
        @Inject(DOCUMENT) public override document: any,
        public override readonly cdr: ChangeDetectorRef,
        protected override differs: IterableDiffers,
        protected override viewRef: ViewContainerRef,
        protected override injector: Injector,
        protected override envInjector: EnvironmentInjector,
        public override navigation: IgxHierarchicalGridNavigationService,
        /** @hidden @internal */
        public override filteringService: IgxFilteringService,
        protected override textHighlightService: IgxTextHighlightService,
        @Inject(IgxOverlayService) protected override overlayService: IgxOverlayService,
        /** @hidden @internal */
        public override summaryService: IgxGridSummaryService,
        @Inject(LOCALE_ID) private localeId1: string,
        protected override platform: PlatformUtil,
        @Optional() @Inject(IgxGridTransaction) protected override _diTransactions?: TransactionService<Transaction, State>,
    ) {
        super(validation, selectionService,colResizingService, gridAPI, transactionFactory, elementRef1, zone,
            document, cdr, differs, viewRef,injector, envInjector, navigation, filteringService, textHighlightService, overlayService,
            summaryService, localeId1, platform, _diTransactions
        );
        this.selectionService.selectedRowsChange.pipe(takeUntil(this.destroy$)).subscribe((args: any[]) => {
            this.selectedRowsChange.emit(args);
        });
    }

    /* contentChildren */
    /* blazorTreatAsCollection */
    /* blazorCollectionName: RowIslandCollection */
    /* ngQueryListName: childLayoutList */
    @ContentChildren(IgxRowIslandElementsComponent, { read: IgxRowIslandElementsComponent, descendants: false })
    public override childLayoutList: QueryList<IgxRowIslandElementsComponent>;

    /**
     * @hidden
     */
    @ContentChildren(IgxRowIslandElementsComponent, { read: IgxRowIslandElementsComponent, descendants: true })
    public override allLayoutList: QueryList<IgxRowIslandElementsComponent>;

    @Output()
    public columnsAutogenerated = new EventEmitter<IColumnsAutoGeneratedEventArgs>();

    @Output()
    public selectedRowsChange = new EventEmitter<any[]>();

    /* contentChildren */
    /* blazorTreatAsCollection */
    /* blazorCollectionName: ActionStripCollection */
    /* blazorCollectionItemName: ActionStrip */
    /* ngQueryListName: actionStripComponents */
    @ContentChildren(IgxActionStripToken)
    public actionStripComponents: QueryList<IgxActionStripToken>;

    protected override autogenerateColumns() {
        super.autogenerateColumns();
        this.columnsAutogenerated.emit({ columns: this._autoGeneratedCols });
    }
}
